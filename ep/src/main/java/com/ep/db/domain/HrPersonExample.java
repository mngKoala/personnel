package com.ep.db.domain;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class HrPersonExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table hr_person
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table hr_person
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table hr_person
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hr_person
     *
     * @mbg.generated
     */
    public HrPersonExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hr_person
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hr_person
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hr_person
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hr_person
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hr_person
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hr_person
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hr_person
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hr_person
     *
     * @mbg.generated
     */
    public HrPersonExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hr_person
     *
     * @mbg.generated
     */
    public HrPersonExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hr_person
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hr_person
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hr_person
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hr_person
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        HrPersonExample example = new HrPersonExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hr_person
     *
     * @mbg.generated
     */
    public HrPersonExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hr_person
     *
     * @mbg.generated
     */
    public HrPersonExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table hr_person
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("id like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("id not like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<String> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<String> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andJobNumberIsNull() {
            addCriterion("job_number is null");
            return (Criteria) this;
        }

        public Criteria andJobNumberIsNotNull() {
            addCriterion("job_number is not null");
            return (Criteria) this;
        }

        public Criteria andJobNumberEqualTo(String value) {
            addCriterion("job_number =", value, "jobNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andJobNumberEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("job_number = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJobNumberNotEqualTo(String value) {
            addCriterion("job_number <>", value, "jobNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andJobNumberNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("job_number <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJobNumberGreaterThan(String value) {
            addCriterion("job_number >", value, "jobNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andJobNumberGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("job_number > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJobNumberGreaterThanOrEqualTo(String value) {
            addCriterion("job_number >=", value, "jobNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andJobNumberGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("job_number >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJobNumberLessThan(String value) {
            addCriterion("job_number <", value, "jobNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andJobNumberLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("job_number < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJobNumberLessThanOrEqualTo(String value) {
            addCriterion("job_number <=", value, "jobNumber");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andJobNumberLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("job_number <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJobNumberLike(String value) {
            addCriterion("job_number like", value, "jobNumber");
            return (Criteria) this;
        }

        public Criteria andJobNumberNotLike(String value) {
            addCriterion("job_number not like", value, "jobNumber");
            return (Criteria) this;
        }

        public Criteria andJobNumberIn(List<String> values) {
            addCriterion("job_number in", values, "jobNumber");
            return (Criteria) this;
        }

        public Criteria andJobNumberNotIn(List<String> values) {
            addCriterion("job_number not in", values, "jobNumber");
            return (Criteria) this;
        }

        public Criteria andJobNumberBetween(String value1, String value2) {
            addCriterion("job_number between", value1, value2, "jobNumber");
            return (Criteria) this;
        }

        public Criteria andJobNumberNotBetween(String value1, String value2) {
            addCriterion("job_number not between", value1, value2, "jobNumber");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("`name` is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("`name` is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("`name` =", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andNameEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("`name` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("`name` <>", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andNameNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("`name` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("`name` >", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andNameGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("`name` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("`name` >=", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andNameGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("`name` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("`name` <", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andNameLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("`name` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("`name` <=", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andNameLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("`name` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("`name` like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("`name` not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("`name` in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("`name` not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("`name` between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("`name` not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andSexCodeIsNull() {
            addCriterion("sex_code is null");
            return (Criteria) this;
        }

        public Criteria andSexCodeIsNotNull() {
            addCriterion("sex_code is not null");
            return (Criteria) this;
        }

        public Criteria andSexCodeEqualTo(String value) {
            addCriterion("sex_code =", value, "sexCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andSexCodeEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("sex_code = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSexCodeNotEqualTo(String value) {
            addCriterion("sex_code <>", value, "sexCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andSexCodeNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("sex_code <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSexCodeGreaterThan(String value) {
            addCriterion("sex_code >", value, "sexCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andSexCodeGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("sex_code > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSexCodeGreaterThanOrEqualTo(String value) {
            addCriterion("sex_code >=", value, "sexCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andSexCodeGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("sex_code >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSexCodeLessThan(String value) {
            addCriterion("sex_code <", value, "sexCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andSexCodeLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("sex_code < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSexCodeLessThanOrEqualTo(String value) {
            addCriterion("sex_code <=", value, "sexCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andSexCodeLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("sex_code <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSexCodeLike(String value) {
            addCriterion("sex_code like", value, "sexCode");
            return (Criteria) this;
        }

        public Criteria andSexCodeNotLike(String value) {
            addCriterion("sex_code not like", value, "sexCode");
            return (Criteria) this;
        }

        public Criteria andSexCodeIn(List<String> values) {
            addCriterion("sex_code in", values, "sexCode");
            return (Criteria) this;
        }

        public Criteria andSexCodeNotIn(List<String> values) {
            addCriterion("sex_code not in", values, "sexCode");
            return (Criteria) this;
        }

        public Criteria andSexCodeBetween(String value1, String value2) {
            addCriterion("sex_code between", value1, value2, "sexCode");
            return (Criteria) this;
        }

        public Criteria andSexCodeNotBetween(String value1, String value2) {
            addCriterion("sex_code not between", value1, value2, "sexCode");
            return (Criteria) this;
        }

        public Criteria andBirthdayIsNull() {
            addCriterion("birthday is null");
            return (Criteria) this;
        }

        public Criteria andBirthdayIsNotNull() {
            addCriterion("birthday is not null");
            return (Criteria) this;
        }

        public Criteria andBirthdayEqualTo(LocalDate value) {
            addCriterion("birthday =", value, "birthday");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andBirthdayEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("birthday = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBirthdayNotEqualTo(LocalDate value) {
            addCriterion("birthday <>", value, "birthday");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andBirthdayNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("birthday <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBirthdayGreaterThan(LocalDate value) {
            addCriterion("birthday >", value, "birthday");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andBirthdayGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("birthday > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBirthdayGreaterThanOrEqualTo(LocalDate value) {
            addCriterion("birthday >=", value, "birthday");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andBirthdayGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("birthday >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBirthdayLessThan(LocalDate value) {
            addCriterion("birthday <", value, "birthday");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andBirthdayLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("birthday < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBirthdayLessThanOrEqualTo(LocalDate value) {
            addCriterion("birthday <=", value, "birthday");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andBirthdayLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("birthday <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBirthdayIn(List<LocalDate> values) {
            addCriterion("birthday in", values, "birthday");
            return (Criteria) this;
        }

        public Criteria andBirthdayNotIn(List<LocalDate> values) {
            addCriterion("birthday not in", values, "birthday");
            return (Criteria) this;
        }

        public Criteria andBirthdayBetween(LocalDate value1, LocalDate value2) {
            addCriterion("birthday between", value1, value2, "birthday");
            return (Criteria) this;
        }

        public Criteria andBirthdayNotBetween(LocalDate value1, LocalDate value2) {
            addCriterion("birthday not between", value1, value2, "birthday");
            return (Criteria) this;
        }

        public Criteria andNativePlaceCodeIsNull() {
            addCriterion("native_place_code is null");
            return (Criteria) this;
        }

        public Criteria andNativePlaceCodeIsNotNull() {
            addCriterion("native_place_code is not null");
            return (Criteria) this;
        }

        public Criteria andNativePlaceCodeEqualTo(String value) {
            addCriterion("native_place_code =", value, "nativePlaceCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andNativePlaceCodeEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("native_place_code = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNativePlaceCodeNotEqualTo(String value) {
            addCriterion("native_place_code <>", value, "nativePlaceCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andNativePlaceCodeNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("native_place_code <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNativePlaceCodeGreaterThan(String value) {
            addCriterion("native_place_code >", value, "nativePlaceCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andNativePlaceCodeGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("native_place_code > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNativePlaceCodeGreaterThanOrEqualTo(String value) {
            addCriterion("native_place_code >=", value, "nativePlaceCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andNativePlaceCodeGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("native_place_code >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNativePlaceCodeLessThan(String value) {
            addCriterion("native_place_code <", value, "nativePlaceCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andNativePlaceCodeLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("native_place_code < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNativePlaceCodeLessThanOrEqualTo(String value) {
            addCriterion("native_place_code <=", value, "nativePlaceCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andNativePlaceCodeLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("native_place_code <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNativePlaceCodeLike(String value) {
            addCriterion("native_place_code like", value, "nativePlaceCode");
            return (Criteria) this;
        }

        public Criteria andNativePlaceCodeNotLike(String value) {
            addCriterion("native_place_code not like", value, "nativePlaceCode");
            return (Criteria) this;
        }

        public Criteria andNativePlaceCodeIn(List<String> values) {
            addCriterion("native_place_code in", values, "nativePlaceCode");
            return (Criteria) this;
        }

        public Criteria andNativePlaceCodeNotIn(List<String> values) {
            addCriterion("native_place_code not in", values, "nativePlaceCode");
            return (Criteria) this;
        }

        public Criteria andNativePlaceCodeBetween(String value1, String value2) {
            addCriterion("native_place_code between", value1, value2, "nativePlaceCode");
            return (Criteria) this;
        }

        public Criteria andNativePlaceCodeNotBetween(String value1, String value2) {
            addCriterion("native_place_code not between", value1, value2, "nativePlaceCode");
            return (Criteria) this;
        }

        public Criteria andNationCodeIsNull() {
            addCriterion("nation_code is null");
            return (Criteria) this;
        }

        public Criteria andNationCodeIsNotNull() {
            addCriterion("nation_code is not null");
            return (Criteria) this;
        }

        public Criteria andNationCodeEqualTo(String value) {
            addCriterion("nation_code =", value, "nationCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andNationCodeEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("nation_code = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNationCodeNotEqualTo(String value) {
            addCriterion("nation_code <>", value, "nationCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andNationCodeNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("nation_code <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNationCodeGreaterThan(String value) {
            addCriterion("nation_code >", value, "nationCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andNationCodeGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("nation_code > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNationCodeGreaterThanOrEqualTo(String value) {
            addCriterion("nation_code >=", value, "nationCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andNationCodeGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("nation_code >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNationCodeLessThan(String value) {
            addCriterion("nation_code <", value, "nationCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andNationCodeLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("nation_code < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNationCodeLessThanOrEqualTo(String value) {
            addCriterion("nation_code <=", value, "nationCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andNationCodeLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("nation_code <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNationCodeLike(String value) {
            addCriterion("nation_code like", value, "nationCode");
            return (Criteria) this;
        }

        public Criteria andNationCodeNotLike(String value) {
            addCriterion("nation_code not like", value, "nationCode");
            return (Criteria) this;
        }

        public Criteria andNationCodeIn(List<String> values) {
            addCriterion("nation_code in", values, "nationCode");
            return (Criteria) this;
        }

        public Criteria andNationCodeNotIn(List<String> values) {
            addCriterion("nation_code not in", values, "nationCode");
            return (Criteria) this;
        }

        public Criteria andNationCodeBetween(String value1, String value2) {
            addCriterion("nation_code between", value1, value2, "nationCode");
            return (Criteria) this;
        }

        public Criteria andNationCodeNotBetween(String value1, String value2) {
            addCriterion("nation_code not between", value1, value2, "nationCode");
            return (Criteria) this;
        }

        public Criteria andMaritalStatusIsNull() {
            addCriterion("marital_status is null");
            return (Criteria) this;
        }

        public Criteria andMaritalStatusIsNotNull() {
            addCriterion("marital_status is not null");
            return (Criteria) this;
        }

        public Criteria andMaritalStatusEqualTo(String value) {
            addCriterion("marital_status =", value, "maritalStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andMaritalStatusEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("marital_status = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMaritalStatusNotEqualTo(String value) {
            addCriterion("marital_status <>", value, "maritalStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andMaritalStatusNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("marital_status <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMaritalStatusGreaterThan(String value) {
            addCriterion("marital_status >", value, "maritalStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andMaritalStatusGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("marital_status > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMaritalStatusGreaterThanOrEqualTo(String value) {
            addCriterion("marital_status >=", value, "maritalStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andMaritalStatusGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("marital_status >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMaritalStatusLessThan(String value) {
            addCriterion("marital_status <", value, "maritalStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andMaritalStatusLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("marital_status < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMaritalStatusLessThanOrEqualTo(String value) {
            addCriterion("marital_status <=", value, "maritalStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andMaritalStatusLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("marital_status <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMaritalStatusLike(String value) {
            addCriterion("marital_status like", value, "maritalStatus");
            return (Criteria) this;
        }

        public Criteria andMaritalStatusNotLike(String value) {
            addCriterion("marital_status not like", value, "maritalStatus");
            return (Criteria) this;
        }

        public Criteria andMaritalStatusIn(List<String> values) {
            addCriterion("marital_status in", values, "maritalStatus");
            return (Criteria) this;
        }

        public Criteria andMaritalStatusNotIn(List<String> values) {
            addCriterion("marital_status not in", values, "maritalStatus");
            return (Criteria) this;
        }

        public Criteria andMaritalStatusBetween(String value1, String value2) {
            addCriterion("marital_status between", value1, value2, "maritalStatus");
            return (Criteria) this;
        }

        public Criteria andMaritalStatusNotBetween(String value1, String value2) {
            addCriterion("marital_status not between", value1, value2, "maritalStatus");
            return (Criteria) this;
        }

        public Criteria andEmployeeStatusIsNull() {
            addCriterion("employee_status is null");
            return (Criteria) this;
        }

        public Criteria andEmployeeStatusIsNotNull() {
            addCriterion("employee_status is not null");
            return (Criteria) this;
        }

        public Criteria andEmployeeStatusEqualTo(String value) {
            addCriterion("employee_status =", value, "employeeStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmployeeStatusEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("employee_status = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmployeeStatusNotEqualTo(String value) {
            addCriterion("employee_status <>", value, "employeeStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmployeeStatusNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("employee_status <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmployeeStatusGreaterThan(String value) {
            addCriterion("employee_status >", value, "employeeStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmployeeStatusGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("employee_status > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmployeeStatusGreaterThanOrEqualTo(String value) {
            addCriterion("employee_status >=", value, "employeeStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmployeeStatusGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("employee_status >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmployeeStatusLessThan(String value) {
            addCriterion("employee_status <", value, "employeeStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmployeeStatusLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("employee_status < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmployeeStatusLessThanOrEqualTo(String value) {
            addCriterion("employee_status <=", value, "employeeStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmployeeStatusLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("employee_status <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmployeeStatusLike(String value) {
            addCriterion("employee_status like", value, "employeeStatus");
            return (Criteria) this;
        }

        public Criteria andEmployeeStatusNotLike(String value) {
            addCriterion("employee_status not like", value, "employeeStatus");
            return (Criteria) this;
        }

        public Criteria andEmployeeStatusIn(List<String> values) {
            addCriterion("employee_status in", values, "employeeStatus");
            return (Criteria) this;
        }

        public Criteria andEmployeeStatusNotIn(List<String> values) {
            addCriterion("employee_status not in", values, "employeeStatus");
            return (Criteria) this;
        }

        public Criteria andEmployeeStatusBetween(String value1, String value2) {
            addCriterion("employee_status between", value1, value2, "employeeStatus");
            return (Criteria) this;
        }

        public Criteria andEmployeeStatusNotBetween(String value1, String value2) {
            addCriterion("employee_status not between", value1, value2, "employeeStatus");
            return (Criteria) this;
        }

        public Criteria andEmployeeIdentityStatusIsNull() {
            addCriterion("employee_identity_status is null");
            return (Criteria) this;
        }

        public Criteria andEmployeeIdentityStatusIsNotNull() {
            addCriterion("employee_identity_status is not null");
            return (Criteria) this;
        }

        public Criteria andEmployeeIdentityStatusEqualTo(String value) {
            addCriterion("employee_identity_status =", value, "employeeIdentityStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmployeeIdentityStatusEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("employee_identity_status = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmployeeIdentityStatusNotEqualTo(String value) {
            addCriterion("employee_identity_status <>", value, "employeeIdentityStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmployeeIdentityStatusNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("employee_identity_status <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmployeeIdentityStatusGreaterThan(String value) {
            addCriterion("employee_identity_status >", value, "employeeIdentityStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmployeeIdentityStatusGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("employee_identity_status > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmployeeIdentityStatusGreaterThanOrEqualTo(String value) {
            addCriterion("employee_identity_status >=", value, "employeeIdentityStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmployeeIdentityStatusGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("employee_identity_status >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmployeeIdentityStatusLessThan(String value) {
            addCriterion("employee_identity_status <", value, "employeeIdentityStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmployeeIdentityStatusLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("employee_identity_status < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmployeeIdentityStatusLessThanOrEqualTo(String value) {
            addCriterion("employee_identity_status <=", value, "employeeIdentityStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmployeeIdentityStatusLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("employee_identity_status <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmployeeIdentityStatusLike(String value) {
            addCriterion("employee_identity_status like", value, "employeeIdentityStatus");
            return (Criteria) this;
        }

        public Criteria andEmployeeIdentityStatusNotLike(String value) {
            addCriterion("employee_identity_status not like", value, "employeeIdentityStatus");
            return (Criteria) this;
        }

        public Criteria andEmployeeIdentityStatusIn(List<String> values) {
            addCriterion("employee_identity_status in", values, "employeeIdentityStatus");
            return (Criteria) this;
        }

        public Criteria andEmployeeIdentityStatusNotIn(List<String> values) {
            addCriterion("employee_identity_status not in", values, "employeeIdentityStatus");
            return (Criteria) this;
        }

        public Criteria andEmployeeIdentityStatusBetween(String value1, String value2) {
            addCriterion("employee_identity_status between", value1, value2, "employeeIdentityStatus");
            return (Criteria) this;
        }

        public Criteria andEmployeeIdentityStatusNotBetween(String value1, String value2) {
            addCriterion("employee_identity_status not between", value1, value2, "employeeIdentityStatus");
            return (Criteria) this;
        }

        public Criteria andEmployeeTypeCodeIsNull() {
            addCriterion("employee_type_code is null");
            return (Criteria) this;
        }

        public Criteria andEmployeeTypeCodeIsNotNull() {
            addCriterion("employee_type_code is not null");
            return (Criteria) this;
        }

        public Criteria andEmployeeTypeCodeEqualTo(String value) {
            addCriterion("employee_type_code =", value, "employeeTypeCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmployeeTypeCodeEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("employee_type_code = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmployeeTypeCodeNotEqualTo(String value) {
            addCriterion("employee_type_code <>", value, "employeeTypeCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmployeeTypeCodeNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("employee_type_code <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmployeeTypeCodeGreaterThan(String value) {
            addCriterion("employee_type_code >", value, "employeeTypeCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmployeeTypeCodeGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("employee_type_code > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmployeeTypeCodeGreaterThanOrEqualTo(String value) {
            addCriterion("employee_type_code >=", value, "employeeTypeCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmployeeTypeCodeGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("employee_type_code >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmployeeTypeCodeLessThan(String value) {
            addCriterion("employee_type_code <", value, "employeeTypeCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmployeeTypeCodeLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("employee_type_code < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmployeeTypeCodeLessThanOrEqualTo(String value) {
            addCriterion("employee_type_code <=", value, "employeeTypeCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmployeeTypeCodeLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("employee_type_code <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmployeeTypeCodeLike(String value) {
            addCriterion("employee_type_code like", value, "employeeTypeCode");
            return (Criteria) this;
        }

        public Criteria andEmployeeTypeCodeNotLike(String value) {
            addCriterion("employee_type_code not like", value, "employeeTypeCode");
            return (Criteria) this;
        }

        public Criteria andEmployeeTypeCodeIn(List<String> values) {
            addCriterion("employee_type_code in", values, "employeeTypeCode");
            return (Criteria) this;
        }

        public Criteria andEmployeeTypeCodeNotIn(List<String> values) {
            addCriterion("employee_type_code not in", values, "employeeTypeCode");
            return (Criteria) this;
        }

        public Criteria andEmployeeTypeCodeBetween(String value1, String value2) {
            addCriterion("employee_type_code between", value1, value2, "employeeTypeCode");
            return (Criteria) this;
        }

        public Criteria andEmployeeTypeCodeNotBetween(String value1, String value2) {
            addCriterion("employee_type_code not between", value1, value2, "employeeTypeCode");
            return (Criteria) this;
        }

        public Criteria andIdentityCardIsNull() {
            addCriterion("identity_card is null");
            return (Criteria) this;
        }

        public Criteria andIdentityCardIsNotNull() {
            addCriterion("identity_card is not null");
            return (Criteria) this;
        }

        public Criteria andIdentityCardEqualTo(String value) {
            addCriterion("identity_card =", value, "identityCard");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andIdentityCardEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("identity_card = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdentityCardNotEqualTo(String value) {
            addCriterion("identity_card <>", value, "identityCard");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andIdentityCardNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("identity_card <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdentityCardGreaterThan(String value) {
            addCriterion("identity_card >", value, "identityCard");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andIdentityCardGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("identity_card > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdentityCardGreaterThanOrEqualTo(String value) {
            addCriterion("identity_card >=", value, "identityCard");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andIdentityCardGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("identity_card >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdentityCardLessThan(String value) {
            addCriterion("identity_card <", value, "identityCard");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andIdentityCardLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("identity_card < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdentityCardLessThanOrEqualTo(String value) {
            addCriterion("identity_card <=", value, "identityCard");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andIdentityCardLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("identity_card <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdentityCardLike(String value) {
            addCriterion("identity_card like", value, "identityCard");
            return (Criteria) this;
        }

        public Criteria andIdentityCardNotLike(String value) {
            addCriterion("identity_card not like", value, "identityCard");
            return (Criteria) this;
        }

        public Criteria andIdentityCardIn(List<String> values) {
            addCriterion("identity_card in", values, "identityCard");
            return (Criteria) this;
        }

        public Criteria andIdentityCardNotIn(List<String> values) {
            addCriterion("identity_card not in", values, "identityCard");
            return (Criteria) this;
        }

        public Criteria andIdentityCardBetween(String value1, String value2) {
            addCriterion("identity_card between", value1, value2, "identityCard");
            return (Criteria) this;
        }

        public Criteria andIdentityCardNotBetween(String value1, String value2) {
            addCriterion("identity_card not between", value1, value2, "identityCard");
            return (Criteria) this;
        }

        public Criteria andContactInformationIsNull() {
            addCriterion("contact_information is null");
            return (Criteria) this;
        }

        public Criteria andContactInformationIsNotNull() {
            addCriterion("contact_information is not null");
            return (Criteria) this;
        }

        public Criteria andContactInformationEqualTo(String value) {
            addCriterion("contact_information =", value, "contactInformation");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andContactInformationEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("contact_information = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContactInformationNotEqualTo(String value) {
            addCriterion("contact_information <>", value, "contactInformation");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andContactInformationNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("contact_information <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContactInformationGreaterThan(String value) {
            addCriterion("contact_information >", value, "contactInformation");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andContactInformationGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("contact_information > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContactInformationGreaterThanOrEqualTo(String value) {
            addCriterion("contact_information >=", value, "contactInformation");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andContactInformationGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("contact_information >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContactInformationLessThan(String value) {
            addCriterion("contact_information <", value, "contactInformation");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andContactInformationLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("contact_information < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContactInformationLessThanOrEqualTo(String value) {
            addCriterion("contact_information <=", value, "contactInformation");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andContactInformationLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("contact_information <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContactInformationLike(String value) {
            addCriterion("contact_information like", value, "contactInformation");
            return (Criteria) this;
        }

        public Criteria andContactInformationNotLike(String value) {
            addCriterion("contact_information not like", value, "contactInformation");
            return (Criteria) this;
        }

        public Criteria andContactInformationIn(List<String> values) {
            addCriterion("contact_information in", values, "contactInformation");
            return (Criteria) this;
        }

        public Criteria andContactInformationNotIn(List<String> values) {
            addCriterion("contact_information not in", values, "contactInformation");
            return (Criteria) this;
        }

        public Criteria andContactInformationBetween(String value1, String value2) {
            addCriterion("contact_information between", value1, value2, "contactInformation");
            return (Criteria) this;
        }

        public Criteria andContactInformationNotBetween(String value1, String value2) {
            addCriterion("contact_information not between", value1, value2, "contactInformation");
            return (Criteria) this;
        }

        public Criteria andEmailIsNull() {
            addCriterion("email is null");
            return (Criteria) this;
        }

        public Criteria andEmailIsNotNull() {
            addCriterion("email is not null");
            return (Criteria) this;
        }

        public Criteria andEmailEqualTo(String value) {
            addCriterion("email =", value, "email");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmailEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("email = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmailNotEqualTo(String value) {
            addCriterion("email <>", value, "email");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmailNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("email <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmailGreaterThan(String value) {
            addCriterion("email >", value, "email");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmailGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("email > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmailGreaterThanOrEqualTo(String value) {
            addCriterion("email >=", value, "email");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmailGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("email >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmailLessThan(String value) {
            addCriterion("email <", value, "email");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmailLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("email < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmailLessThanOrEqualTo(String value) {
            addCriterion("email <=", value, "email");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmailLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("email <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmailLike(String value) {
            addCriterion("email like", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailNotLike(String value) {
            addCriterion("email not like", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailIn(List<String> values) {
            addCriterion("email in", values, "email");
            return (Criteria) this;
        }

        public Criteria andEmailNotIn(List<String> values) {
            addCriterion("email not in", values, "email");
            return (Criteria) this;
        }

        public Criteria andEmailBetween(String value1, String value2) {
            addCriterion("email between", value1, value2, "email");
            return (Criteria) this;
        }

        public Criteria andEmailNotBetween(String value1, String value2) {
            addCriterion("email not between", value1, value2, "email");
            return (Criteria) this;
        }

        public Criteria andEmergencyContactIsNull() {
            addCriterion("emergency_contact is null");
            return (Criteria) this;
        }

        public Criteria andEmergencyContactIsNotNull() {
            addCriterion("emergency_contact is not null");
            return (Criteria) this;
        }

        public Criteria andEmergencyContactEqualTo(String value) {
            addCriterion("emergency_contact =", value, "emergencyContact");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmergencyContactEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("emergency_contact = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmergencyContactNotEqualTo(String value) {
            addCriterion("emergency_contact <>", value, "emergencyContact");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmergencyContactNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("emergency_contact <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmergencyContactGreaterThan(String value) {
            addCriterion("emergency_contact >", value, "emergencyContact");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmergencyContactGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("emergency_contact > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmergencyContactGreaterThanOrEqualTo(String value) {
            addCriterion("emergency_contact >=", value, "emergencyContact");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmergencyContactGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("emergency_contact >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmergencyContactLessThan(String value) {
            addCriterion("emergency_contact <", value, "emergencyContact");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmergencyContactLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("emergency_contact < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmergencyContactLessThanOrEqualTo(String value) {
            addCriterion("emergency_contact <=", value, "emergencyContact");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmergencyContactLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("emergency_contact <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmergencyContactLike(String value) {
            addCriterion("emergency_contact like", value, "emergencyContact");
            return (Criteria) this;
        }

        public Criteria andEmergencyContactNotLike(String value) {
            addCriterion("emergency_contact not like", value, "emergencyContact");
            return (Criteria) this;
        }

        public Criteria andEmergencyContactIn(List<String> values) {
            addCriterion("emergency_contact in", values, "emergencyContact");
            return (Criteria) this;
        }

        public Criteria andEmergencyContactNotIn(List<String> values) {
            addCriterion("emergency_contact not in", values, "emergencyContact");
            return (Criteria) this;
        }

        public Criteria andEmergencyContactBetween(String value1, String value2) {
            addCriterion("emergency_contact between", value1, value2, "emergencyContact");
            return (Criteria) this;
        }

        public Criteria andEmergencyContactNotBetween(String value1, String value2) {
            addCriterion("emergency_contact not between", value1, value2, "emergencyContact");
            return (Criteria) this;
        }

        public Criteria andEmergencyContactNoIsNull() {
            addCriterion("emergency_contact_no is null");
            return (Criteria) this;
        }

        public Criteria andEmergencyContactNoIsNotNull() {
            addCriterion("emergency_contact_no is not null");
            return (Criteria) this;
        }

        public Criteria andEmergencyContactNoEqualTo(String value) {
            addCriterion("emergency_contact_no =", value, "emergencyContactNo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmergencyContactNoEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("emergency_contact_no = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmergencyContactNoNotEqualTo(String value) {
            addCriterion("emergency_contact_no <>", value, "emergencyContactNo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmergencyContactNoNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("emergency_contact_no <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmergencyContactNoGreaterThan(String value) {
            addCriterion("emergency_contact_no >", value, "emergencyContactNo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmergencyContactNoGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("emergency_contact_no > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmergencyContactNoGreaterThanOrEqualTo(String value) {
            addCriterion("emergency_contact_no >=", value, "emergencyContactNo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmergencyContactNoGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("emergency_contact_no >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmergencyContactNoLessThan(String value) {
            addCriterion("emergency_contact_no <", value, "emergencyContactNo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmergencyContactNoLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("emergency_contact_no < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmergencyContactNoLessThanOrEqualTo(String value) {
            addCriterion("emergency_contact_no <=", value, "emergencyContactNo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmergencyContactNoLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("emergency_contact_no <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmergencyContactNoLike(String value) {
            addCriterion("emergency_contact_no like", value, "emergencyContactNo");
            return (Criteria) this;
        }

        public Criteria andEmergencyContactNoNotLike(String value) {
            addCriterion("emergency_contact_no not like", value, "emergencyContactNo");
            return (Criteria) this;
        }

        public Criteria andEmergencyContactNoIn(List<String> values) {
            addCriterion("emergency_contact_no in", values, "emergencyContactNo");
            return (Criteria) this;
        }

        public Criteria andEmergencyContactNoNotIn(List<String> values) {
            addCriterion("emergency_contact_no not in", values, "emergencyContactNo");
            return (Criteria) this;
        }

        public Criteria andEmergencyContactNoBetween(String value1, String value2) {
            addCriterion("emergency_contact_no between", value1, value2, "emergencyContactNo");
            return (Criteria) this;
        }

        public Criteria andEmergencyContactNoNotBetween(String value1, String value2) {
            addCriterion("emergency_contact_no not between", value1, value2, "emergencyContactNo");
            return (Criteria) this;
        }

        public Criteria andHomeAddressIsNull() {
            addCriterion("home_address is null");
            return (Criteria) this;
        }

        public Criteria andHomeAddressIsNotNull() {
            addCriterion("home_address is not null");
            return (Criteria) this;
        }

        public Criteria andHomeAddressEqualTo(String value) {
            addCriterion("home_address =", value, "homeAddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andHomeAddressEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("home_address = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHomeAddressNotEqualTo(String value) {
            addCriterion("home_address <>", value, "homeAddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andHomeAddressNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("home_address <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHomeAddressGreaterThan(String value) {
            addCriterion("home_address >", value, "homeAddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andHomeAddressGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("home_address > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHomeAddressGreaterThanOrEqualTo(String value) {
            addCriterion("home_address >=", value, "homeAddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andHomeAddressGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("home_address >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHomeAddressLessThan(String value) {
            addCriterion("home_address <", value, "homeAddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andHomeAddressLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("home_address < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHomeAddressLessThanOrEqualTo(String value) {
            addCriterion("home_address <=", value, "homeAddress");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andHomeAddressLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("home_address <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHomeAddressLike(String value) {
            addCriterion("home_address like", value, "homeAddress");
            return (Criteria) this;
        }

        public Criteria andHomeAddressNotLike(String value) {
            addCriterion("home_address not like", value, "homeAddress");
            return (Criteria) this;
        }

        public Criteria andHomeAddressIn(List<String> values) {
            addCriterion("home_address in", values, "homeAddress");
            return (Criteria) this;
        }

        public Criteria andHomeAddressNotIn(List<String> values) {
            addCriterion("home_address not in", values, "homeAddress");
            return (Criteria) this;
        }

        public Criteria andHomeAddressBetween(String value1, String value2) {
            addCriterion("home_address between", value1, value2, "homeAddress");
            return (Criteria) this;
        }

        public Criteria andHomeAddressNotBetween(String value1, String value2) {
            addCriterion("home_address not between", value1, value2, "homeAddress");
            return (Criteria) this;
        }

        public Criteria andWeixinIdIsNull() {
            addCriterion("weixin_id is null");
            return (Criteria) this;
        }

        public Criteria andWeixinIdIsNotNull() {
            addCriterion("weixin_id is not null");
            return (Criteria) this;
        }

        public Criteria andWeixinIdEqualTo(String value) {
            addCriterion("weixin_id =", value, "weixinId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andWeixinIdEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("weixin_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWeixinIdNotEqualTo(String value) {
            addCriterion("weixin_id <>", value, "weixinId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andWeixinIdNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("weixin_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWeixinIdGreaterThan(String value) {
            addCriterion("weixin_id >", value, "weixinId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andWeixinIdGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("weixin_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWeixinIdGreaterThanOrEqualTo(String value) {
            addCriterion("weixin_id >=", value, "weixinId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andWeixinIdGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("weixin_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWeixinIdLessThan(String value) {
            addCriterion("weixin_id <", value, "weixinId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andWeixinIdLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("weixin_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWeixinIdLessThanOrEqualTo(String value) {
            addCriterion("weixin_id <=", value, "weixinId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andWeixinIdLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("weixin_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWeixinIdLike(String value) {
            addCriterion("weixin_id like", value, "weixinId");
            return (Criteria) this;
        }

        public Criteria andWeixinIdNotLike(String value) {
            addCriterion("weixin_id not like", value, "weixinId");
            return (Criteria) this;
        }

        public Criteria andWeixinIdIn(List<String> values) {
            addCriterion("weixin_id in", values, "weixinId");
            return (Criteria) this;
        }

        public Criteria andWeixinIdNotIn(List<String> values) {
            addCriterion("weixin_id not in", values, "weixinId");
            return (Criteria) this;
        }

        public Criteria andWeixinIdBetween(String value1, String value2) {
            addCriterion("weixin_id between", value1, value2, "weixinId");
            return (Criteria) this;
        }

        public Criteria andWeixinIdNotBetween(String value1, String value2) {
            addCriterion("weixin_id not between", value1, value2, "weixinId");
            return (Criteria) this;
        }

        public Criteria andEducationCodeIsNull() {
            addCriterion("education_code is null");
            return (Criteria) this;
        }

        public Criteria andEducationCodeIsNotNull() {
            addCriterion("education_code is not null");
            return (Criteria) this;
        }

        public Criteria andEducationCodeEqualTo(String value) {
            addCriterion("education_code =", value, "educationCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEducationCodeEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("education_code = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEducationCodeNotEqualTo(String value) {
            addCriterion("education_code <>", value, "educationCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEducationCodeNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("education_code <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEducationCodeGreaterThan(String value) {
            addCriterion("education_code >", value, "educationCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEducationCodeGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("education_code > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEducationCodeGreaterThanOrEqualTo(String value) {
            addCriterion("education_code >=", value, "educationCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEducationCodeGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("education_code >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEducationCodeLessThan(String value) {
            addCriterion("education_code <", value, "educationCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEducationCodeLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("education_code < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEducationCodeLessThanOrEqualTo(String value) {
            addCriterion("education_code <=", value, "educationCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEducationCodeLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("education_code <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEducationCodeLike(String value) {
            addCriterion("education_code like", value, "educationCode");
            return (Criteria) this;
        }

        public Criteria andEducationCodeNotLike(String value) {
            addCriterion("education_code not like", value, "educationCode");
            return (Criteria) this;
        }

        public Criteria andEducationCodeIn(List<String> values) {
            addCriterion("education_code in", values, "educationCode");
            return (Criteria) this;
        }

        public Criteria andEducationCodeNotIn(List<String> values) {
            addCriterion("education_code not in", values, "educationCode");
            return (Criteria) this;
        }

        public Criteria andEducationCodeBetween(String value1, String value2) {
            addCriterion("education_code between", value1, value2, "educationCode");
            return (Criteria) this;
        }

        public Criteria andEducationCodeNotBetween(String value1, String value2) {
            addCriterion("education_code not between", value1, value2, "educationCode");
            return (Criteria) this;
        }

        public Criteria andGraduationSchoolIsNull() {
            addCriterion("graduation_school is null");
            return (Criteria) this;
        }

        public Criteria andGraduationSchoolIsNotNull() {
            addCriterion("graduation_school is not null");
            return (Criteria) this;
        }

        public Criteria andGraduationSchoolEqualTo(String value) {
            addCriterion("graduation_school =", value, "graduationSchool");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andGraduationSchoolEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("graduation_school = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGraduationSchoolNotEqualTo(String value) {
            addCriterion("graduation_school <>", value, "graduationSchool");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andGraduationSchoolNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("graduation_school <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGraduationSchoolGreaterThan(String value) {
            addCriterion("graduation_school >", value, "graduationSchool");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andGraduationSchoolGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("graduation_school > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGraduationSchoolGreaterThanOrEqualTo(String value) {
            addCriterion("graduation_school >=", value, "graduationSchool");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andGraduationSchoolGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("graduation_school >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGraduationSchoolLessThan(String value) {
            addCriterion("graduation_school <", value, "graduationSchool");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andGraduationSchoolLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("graduation_school < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGraduationSchoolLessThanOrEqualTo(String value) {
            addCriterion("graduation_school <=", value, "graduationSchool");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andGraduationSchoolLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("graduation_school <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGraduationSchoolLike(String value) {
            addCriterion("graduation_school like", value, "graduationSchool");
            return (Criteria) this;
        }

        public Criteria andGraduationSchoolNotLike(String value) {
            addCriterion("graduation_school not like", value, "graduationSchool");
            return (Criteria) this;
        }

        public Criteria andGraduationSchoolIn(List<String> values) {
            addCriterion("graduation_school in", values, "graduationSchool");
            return (Criteria) this;
        }

        public Criteria andGraduationSchoolNotIn(List<String> values) {
            addCriterion("graduation_school not in", values, "graduationSchool");
            return (Criteria) this;
        }

        public Criteria andGraduationSchoolBetween(String value1, String value2) {
            addCriterion("graduation_school between", value1, value2, "graduationSchool");
            return (Criteria) this;
        }

        public Criteria andGraduationSchoolNotBetween(String value1, String value2) {
            addCriterion("graduation_school not between", value1, value2, "graduationSchool");
            return (Criteria) this;
        }

        public Criteria andMajorIsNull() {
            addCriterion("major is null");
            return (Criteria) this;
        }

        public Criteria andMajorIsNotNull() {
            addCriterion("major is not null");
            return (Criteria) this;
        }

        public Criteria andMajorEqualTo(String value) {
            addCriterion("major =", value, "major");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andMajorEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("major = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMajorNotEqualTo(String value) {
            addCriterion("major <>", value, "major");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andMajorNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("major <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMajorGreaterThan(String value) {
            addCriterion("major >", value, "major");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andMajorGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("major > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMajorGreaterThanOrEqualTo(String value) {
            addCriterion("major >=", value, "major");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andMajorGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("major >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMajorLessThan(String value) {
            addCriterion("major <", value, "major");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andMajorLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("major < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMajorLessThanOrEqualTo(String value) {
            addCriterion("major <=", value, "major");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andMajorLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("major <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMajorLike(String value) {
            addCriterion("major like", value, "major");
            return (Criteria) this;
        }

        public Criteria andMajorNotLike(String value) {
            addCriterion("major not like", value, "major");
            return (Criteria) this;
        }

        public Criteria andMajorIn(List<String> values) {
            addCriterion("major in", values, "major");
            return (Criteria) this;
        }

        public Criteria andMajorNotIn(List<String> values) {
            addCriterion("major not in", values, "major");
            return (Criteria) this;
        }

        public Criteria andMajorBetween(String value1, String value2) {
            addCriterion("major between", value1, value2, "major");
            return (Criteria) this;
        }

        public Criteria andMajorNotBetween(String value1, String value2) {
            addCriterion("major not between", value1, value2, "major");
            return (Criteria) this;
        }

        public Criteria andGraduationDateIsNull() {
            addCriterion("graduation_date is null");
            return (Criteria) this;
        }

        public Criteria andGraduationDateIsNotNull() {
            addCriterion("graduation_date is not null");
            return (Criteria) this;
        }

        public Criteria andGraduationDateEqualTo(LocalDate value) {
            addCriterion("graduation_date =", value, "graduationDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andGraduationDateEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("graduation_date = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGraduationDateNotEqualTo(LocalDate value) {
            addCriterion("graduation_date <>", value, "graduationDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andGraduationDateNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("graduation_date <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGraduationDateGreaterThan(LocalDate value) {
            addCriterion("graduation_date >", value, "graduationDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andGraduationDateGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("graduation_date > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGraduationDateGreaterThanOrEqualTo(LocalDate value) {
            addCriterion("graduation_date >=", value, "graduationDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andGraduationDateGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("graduation_date >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGraduationDateLessThan(LocalDate value) {
            addCriterion("graduation_date <", value, "graduationDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andGraduationDateLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("graduation_date < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGraduationDateLessThanOrEqualTo(LocalDate value) {
            addCriterion("graduation_date <=", value, "graduationDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andGraduationDateLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("graduation_date <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andGraduationDateIn(List<LocalDate> values) {
            addCriterion("graduation_date in", values, "graduationDate");
            return (Criteria) this;
        }

        public Criteria andGraduationDateNotIn(List<LocalDate> values) {
            addCriterion("graduation_date not in", values, "graduationDate");
            return (Criteria) this;
        }

        public Criteria andGraduationDateBetween(LocalDate value1, LocalDate value2) {
            addCriterion("graduation_date between", value1, value2, "graduationDate");
            return (Criteria) this;
        }

        public Criteria andGraduationDateNotBetween(LocalDate value1, LocalDate value2) {
            addCriterion("graduation_date not between", value1, value2, "graduationDate");
            return (Criteria) this;
        }

        public Criteria andForeignLanguageIsNull() {
            addCriterion("foreign_language is null");
            return (Criteria) this;
        }

        public Criteria andForeignLanguageIsNotNull() {
            addCriterion("foreign_language is not null");
            return (Criteria) this;
        }

        public Criteria andForeignLanguageEqualTo(String value) {
            addCriterion("foreign_language =", value, "foreignLanguage");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andForeignLanguageEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("foreign_language = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andForeignLanguageNotEqualTo(String value) {
            addCriterion("foreign_language <>", value, "foreignLanguage");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andForeignLanguageNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("foreign_language <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andForeignLanguageGreaterThan(String value) {
            addCriterion("foreign_language >", value, "foreignLanguage");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andForeignLanguageGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("foreign_language > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andForeignLanguageGreaterThanOrEqualTo(String value) {
            addCriterion("foreign_language >=", value, "foreignLanguage");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andForeignLanguageGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("foreign_language >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andForeignLanguageLessThan(String value) {
            addCriterion("foreign_language <", value, "foreignLanguage");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andForeignLanguageLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("foreign_language < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andForeignLanguageLessThanOrEqualTo(String value) {
            addCriterion("foreign_language <=", value, "foreignLanguage");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andForeignLanguageLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("foreign_language <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andForeignLanguageLike(String value) {
            addCriterion("foreign_language like", value, "foreignLanguage");
            return (Criteria) this;
        }

        public Criteria andForeignLanguageNotLike(String value) {
            addCriterion("foreign_language not like", value, "foreignLanguage");
            return (Criteria) this;
        }

        public Criteria andForeignLanguageIn(List<String> values) {
            addCriterion("foreign_language in", values, "foreignLanguage");
            return (Criteria) this;
        }

        public Criteria andForeignLanguageNotIn(List<String> values) {
            addCriterion("foreign_language not in", values, "foreignLanguage");
            return (Criteria) this;
        }

        public Criteria andForeignLanguageBetween(String value1, String value2) {
            addCriterion("foreign_language between", value1, value2, "foreignLanguage");
            return (Criteria) this;
        }

        public Criteria andForeignLanguageNotBetween(String value1, String value2) {
            addCriterion("foreign_language not between", value1, value2, "foreignLanguage");
            return (Criteria) this;
        }

        public Criteria andForeignLanguageLevelIsNull() {
            addCriterion("foreign_language_level is null");
            return (Criteria) this;
        }

        public Criteria andForeignLanguageLevelIsNotNull() {
            addCriterion("foreign_language_level is not null");
            return (Criteria) this;
        }

        public Criteria andForeignLanguageLevelEqualTo(String value) {
            addCriterion("foreign_language_level =", value, "foreignLanguageLevel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andForeignLanguageLevelEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("foreign_language_level = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andForeignLanguageLevelNotEqualTo(String value) {
            addCriterion("foreign_language_level <>", value, "foreignLanguageLevel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andForeignLanguageLevelNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("foreign_language_level <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andForeignLanguageLevelGreaterThan(String value) {
            addCriterion("foreign_language_level >", value, "foreignLanguageLevel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andForeignLanguageLevelGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("foreign_language_level > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andForeignLanguageLevelGreaterThanOrEqualTo(String value) {
            addCriterion("foreign_language_level >=", value, "foreignLanguageLevel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andForeignLanguageLevelGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("foreign_language_level >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andForeignLanguageLevelLessThan(String value) {
            addCriterion("foreign_language_level <", value, "foreignLanguageLevel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andForeignLanguageLevelLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("foreign_language_level < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andForeignLanguageLevelLessThanOrEqualTo(String value) {
            addCriterion("foreign_language_level <=", value, "foreignLanguageLevel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andForeignLanguageLevelLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("foreign_language_level <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andForeignLanguageLevelLike(String value) {
            addCriterion("foreign_language_level like", value, "foreignLanguageLevel");
            return (Criteria) this;
        }

        public Criteria andForeignLanguageLevelNotLike(String value) {
            addCriterion("foreign_language_level not like", value, "foreignLanguageLevel");
            return (Criteria) this;
        }

        public Criteria andForeignLanguageLevelIn(List<String> values) {
            addCriterion("foreign_language_level in", values, "foreignLanguageLevel");
            return (Criteria) this;
        }

        public Criteria andForeignLanguageLevelNotIn(List<String> values) {
            addCriterion("foreign_language_level not in", values, "foreignLanguageLevel");
            return (Criteria) this;
        }

        public Criteria andForeignLanguageLevelBetween(String value1, String value2) {
            addCriterion("foreign_language_level between", value1, value2, "foreignLanguageLevel");
            return (Criteria) this;
        }

        public Criteria andForeignLanguageLevelNotBetween(String value1, String value2) {
            addCriterion("foreign_language_level not between", value1, value2, "foreignLanguageLevel");
            return (Criteria) this;
        }

        public Criteria andComputerAbilityIsNull() {
            addCriterion("computer_ability is null");
            return (Criteria) this;
        }

        public Criteria andComputerAbilityIsNotNull() {
            addCriterion("computer_ability is not null");
            return (Criteria) this;
        }

        public Criteria andComputerAbilityEqualTo(String value) {
            addCriterion("computer_ability =", value, "computerAbility");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andComputerAbilityEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("computer_ability = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andComputerAbilityNotEqualTo(String value) {
            addCriterion("computer_ability <>", value, "computerAbility");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andComputerAbilityNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("computer_ability <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andComputerAbilityGreaterThan(String value) {
            addCriterion("computer_ability >", value, "computerAbility");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andComputerAbilityGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("computer_ability > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andComputerAbilityGreaterThanOrEqualTo(String value) {
            addCriterion("computer_ability >=", value, "computerAbility");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andComputerAbilityGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("computer_ability >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andComputerAbilityLessThan(String value) {
            addCriterion("computer_ability <", value, "computerAbility");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andComputerAbilityLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("computer_ability < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andComputerAbilityLessThanOrEqualTo(String value) {
            addCriterion("computer_ability <=", value, "computerAbility");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andComputerAbilityLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("computer_ability <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andComputerAbilityLike(String value) {
            addCriterion("computer_ability like", value, "computerAbility");
            return (Criteria) this;
        }

        public Criteria andComputerAbilityNotLike(String value) {
            addCriterion("computer_ability not like", value, "computerAbility");
            return (Criteria) this;
        }

        public Criteria andComputerAbilityIn(List<String> values) {
            addCriterion("computer_ability in", values, "computerAbility");
            return (Criteria) this;
        }

        public Criteria andComputerAbilityNotIn(List<String> values) {
            addCriterion("computer_ability not in", values, "computerAbility");
            return (Criteria) this;
        }

        public Criteria andComputerAbilityBetween(String value1, String value2) {
            addCriterion("computer_ability between", value1, value2, "computerAbility");
            return (Criteria) this;
        }

        public Criteria andComputerAbilityNotBetween(String value1, String value2) {
            addCriterion("computer_ability not between", value1, value2, "computerAbility");
            return (Criteria) this;
        }

        public Criteria andComputerLevelIsNull() {
            addCriterion("computer_level is null");
            return (Criteria) this;
        }

        public Criteria andComputerLevelIsNotNull() {
            addCriterion("computer_level is not null");
            return (Criteria) this;
        }

        public Criteria andComputerLevelEqualTo(String value) {
            addCriterion("computer_level =", value, "computerLevel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andComputerLevelEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("computer_level = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andComputerLevelNotEqualTo(String value) {
            addCriterion("computer_level <>", value, "computerLevel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andComputerLevelNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("computer_level <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andComputerLevelGreaterThan(String value) {
            addCriterion("computer_level >", value, "computerLevel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andComputerLevelGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("computer_level > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andComputerLevelGreaterThanOrEqualTo(String value) {
            addCriterion("computer_level >=", value, "computerLevel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andComputerLevelGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("computer_level >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andComputerLevelLessThan(String value) {
            addCriterion("computer_level <", value, "computerLevel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andComputerLevelLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("computer_level < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andComputerLevelLessThanOrEqualTo(String value) {
            addCriterion("computer_level <=", value, "computerLevel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andComputerLevelLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("computer_level <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andComputerLevelLike(String value) {
            addCriterion("computer_level like", value, "computerLevel");
            return (Criteria) this;
        }

        public Criteria andComputerLevelNotLike(String value) {
            addCriterion("computer_level not like", value, "computerLevel");
            return (Criteria) this;
        }

        public Criteria andComputerLevelIn(List<String> values) {
            addCriterion("computer_level in", values, "computerLevel");
            return (Criteria) this;
        }

        public Criteria andComputerLevelNotIn(List<String> values) {
            addCriterion("computer_level not in", values, "computerLevel");
            return (Criteria) this;
        }

        public Criteria andComputerLevelBetween(String value1, String value2) {
            addCriterion("computer_level between", value1, value2, "computerLevel");
            return (Criteria) this;
        }

        public Criteria andComputerLevelNotBetween(String value1, String value2) {
            addCriterion("computer_level not between", value1, value2, "computerLevel");
            return (Criteria) this;
        }

        public Criteria andPoliticCountenanceCodeIsNull() {
            addCriterion("politic_countenance_code is null");
            return (Criteria) this;
        }

        public Criteria andPoliticCountenanceCodeIsNotNull() {
            addCriterion("politic_countenance_code is not null");
            return (Criteria) this;
        }

        public Criteria andPoliticCountenanceCodeEqualTo(String value) {
            addCriterion("politic_countenance_code =", value, "politicCountenanceCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andPoliticCountenanceCodeEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("politic_countenance_code = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPoliticCountenanceCodeNotEqualTo(String value) {
            addCriterion("politic_countenance_code <>", value, "politicCountenanceCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andPoliticCountenanceCodeNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("politic_countenance_code <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPoliticCountenanceCodeGreaterThan(String value) {
            addCriterion("politic_countenance_code >", value, "politicCountenanceCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andPoliticCountenanceCodeGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("politic_countenance_code > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPoliticCountenanceCodeGreaterThanOrEqualTo(String value) {
            addCriterion("politic_countenance_code >=", value, "politicCountenanceCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andPoliticCountenanceCodeGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("politic_countenance_code >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPoliticCountenanceCodeLessThan(String value) {
            addCriterion("politic_countenance_code <", value, "politicCountenanceCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andPoliticCountenanceCodeLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("politic_countenance_code < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPoliticCountenanceCodeLessThanOrEqualTo(String value) {
            addCriterion("politic_countenance_code <=", value, "politicCountenanceCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andPoliticCountenanceCodeLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("politic_countenance_code <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPoliticCountenanceCodeLike(String value) {
            addCriterion("politic_countenance_code like", value, "politicCountenanceCode");
            return (Criteria) this;
        }

        public Criteria andPoliticCountenanceCodeNotLike(String value) {
            addCriterion("politic_countenance_code not like", value, "politicCountenanceCode");
            return (Criteria) this;
        }

        public Criteria andPoliticCountenanceCodeIn(List<String> values) {
            addCriterion("politic_countenance_code in", values, "politicCountenanceCode");
            return (Criteria) this;
        }

        public Criteria andPoliticCountenanceCodeNotIn(List<String> values) {
            addCriterion("politic_countenance_code not in", values, "politicCountenanceCode");
            return (Criteria) this;
        }

        public Criteria andPoliticCountenanceCodeBetween(String value1, String value2) {
            addCriterion("politic_countenance_code between", value1, value2, "politicCountenanceCode");
            return (Criteria) this;
        }

        public Criteria andPoliticCountenanceCodeNotBetween(String value1, String value2) {
            addCriterion("politic_countenance_code not between", value1, value2, "politicCountenanceCode");
            return (Criteria) this;
        }

        public Criteria andJoinPartDateIsNull() {
            addCriterion("join_part_date is null");
            return (Criteria) this;
        }

        public Criteria andJoinPartDateIsNotNull() {
            addCriterion("join_part_date is not null");
            return (Criteria) this;
        }

        public Criteria andJoinPartDateEqualTo(LocalDate value) {
            addCriterion("join_part_date =", value, "joinPartDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andJoinPartDateEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("join_part_date = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJoinPartDateNotEqualTo(LocalDate value) {
            addCriterion("join_part_date <>", value, "joinPartDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andJoinPartDateNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("join_part_date <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJoinPartDateGreaterThan(LocalDate value) {
            addCriterion("join_part_date >", value, "joinPartDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andJoinPartDateGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("join_part_date > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJoinPartDateGreaterThanOrEqualTo(LocalDate value) {
            addCriterion("join_part_date >=", value, "joinPartDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andJoinPartDateGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("join_part_date >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJoinPartDateLessThan(LocalDate value) {
            addCriterion("join_part_date <", value, "joinPartDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andJoinPartDateLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("join_part_date < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJoinPartDateLessThanOrEqualTo(LocalDate value) {
            addCriterion("join_part_date <=", value, "joinPartDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andJoinPartDateLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("join_part_date <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andJoinPartDateIn(List<LocalDate> values) {
            addCriterion("join_part_date in", values, "joinPartDate");
            return (Criteria) this;
        }

        public Criteria andJoinPartDateNotIn(List<LocalDate> values) {
            addCriterion("join_part_date not in", values, "joinPartDate");
            return (Criteria) this;
        }

        public Criteria andJoinPartDateBetween(LocalDate value1, LocalDate value2) {
            addCriterion("join_part_date between", value1, value2, "joinPartDate");
            return (Criteria) this;
        }

        public Criteria andJoinPartDateNotBetween(LocalDate value1, LocalDate value2) {
            addCriterion("join_part_date not between", value1, value2, "joinPartDate");
            return (Criteria) this;
        }

        public Criteria andBloodTypeIsNull() {
            addCriterion("blood_type is null");
            return (Criteria) this;
        }

        public Criteria andBloodTypeIsNotNull() {
            addCriterion("blood_type is not null");
            return (Criteria) this;
        }

        public Criteria andBloodTypeEqualTo(String value) {
            addCriterion("blood_type =", value, "bloodType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andBloodTypeEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("blood_type = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBloodTypeNotEqualTo(String value) {
            addCriterion("blood_type <>", value, "bloodType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andBloodTypeNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("blood_type <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBloodTypeGreaterThan(String value) {
            addCriterion("blood_type >", value, "bloodType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andBloodTypeGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("blood_type > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBloodTypeGreaterThanOrEqualTo(String value) {
            addCriterion("blood_type >=", value, "bloodType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andBloodTypeGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("blood_type >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBloodTypeLessThan(String value) {
            addCriterion("blood_type <", value, "bloodType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andBloodTypeLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("blood_type < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBloodTypeLessThanOrEqualTo(String value) {
            addCriterion("blood_type <=", value, "bloodType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andBloodTypeLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("blood_type <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBloodTypeLike(String value) {
            addCriterion("blood_type like", value, "bloodType");
            return (Criteria) this;
        }

        public Criteria andBloodTypeNotLike(String value) {
            addCriterion("blood_type not like", value, "bloodType");
            return (Criteria) this;
        }

        public Criteria andBloodTypeIn(List<String> values) {
            addCriterion("blood_type in", values, "bloodType");
            return (Criteria) this;
        }

        public Criteria andBloodTypeNotIn(List<String> values) {
            addCriterion("blood_type not in", values, "bloodType");
            return (Criteria) this;
        }

        public Criteria andBloodTypeBetween(String value1, String value2) {
            addCriterion("blood_type between", value1, value2, "bloodType");
            return (Criteria) this;
        }

        public Criteria andBloodTypeNotBetween(String value1, String value2) {
            addCriterion("blood_type not between", value1, value2, "bloodType");
            return (Criteria) this;
        }

        public Criteria andBodyHeightIsNull() {
            addCriterion("body_height is null");
            return (Criteria) this;
        }

        public Criteria andBodyHeightIsNotNull() {
            addCriterion("body_height is not null");
            return (Criteria) this;
        }

        public Criteria andBodyHeightEqualTo(Integer value) {
            addCriterion("body_height =", value, "bodyHeight");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andBodyHeightEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("body_height = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBodyHeightNotEqualTo(Integer value) {
            addCriterion("body_height <>", value, "bodyHeight");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andBodyHeightNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("body_height <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBodyHeightGreaterThan(Integer value) {
            addCriterion("body_height >", value, "bodyHeight");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andBodyHeightGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("body_height > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBodyHeightGreaterThanOrEqualTo(Integer value) {
            addCriterion("body_height >=", value, "bodyHeight");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andBodyHeightGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("body_height >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBodyHeightLessThan(Integer value) {
            addCriterion("body_height <", value, "bodyHeight");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andBodyHeightLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("body_height < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBodyHeightLessThanOrEqualTo(Integer value) {
            addCriterion("body_height <=", value, "bodyHeight");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andBodyHeightLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("body_height <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBodyHeightIn(List<Integer> values) {
            addCriterion("body_height in", values, "bodyHeight");
            return (Criteria) this;
        }

        public Criteria andBodyHeightNotIn(List<Integer> values) {
            addCriterion("body_height not in", values, "bodyHeight");
            return (Criteria) this;
        }

        public Criteria andBodyHeightBetween(Integer value1, Integer value2) {
            addCriterion("body_height between", value1, value2, "bodyHeight");
            return (Criteria) this;
        }

        public Criteria andBodyHeightNotBetween(Integer value1, Integer value2) {
            addCriterion("body_height not between", value1, value2, "bodyHeight");
            return (Criteria) this;
        }

        public Criteria andBodyWeightIsNull() {
            addCriterion("body_weight is null");
            return (Criteria) this;
        }

        public Criteria andBodyWeightIsNotNull() {
            addCriterion("body_weight is not null");
            return (Criteria) this;
        }

        public Criteria andBodyWeightEqualTo(Integer value) {
            addCriterion("body_weight =", value, "bodyWeight");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andBodyWeightEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("body_weight = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBodyWeightNotEqualTo(Integer value) {
            addCriterion("body_weight <>", value, "bodyWeight");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andBodyWeightNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("body_weight <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBodyWeightGreaterThan(Integer value) {
            addCriterion("body_weight >", value, "bodyWeight");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andBodyWeightGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("body_weight > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBodyWeightGreaterThanOrEqualTo(Integer value) {
            addCriterion("body_weight >=", value, "bodyWeight");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andBodyWeightGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("body_weight >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBodyWeightLessThan(Integer value) {
            addCriterion("body_weight <", value, "bodyWeight");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andBodyWeightLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("body_weight < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBodyWeightLessThanOrEqualTo(Integer value) {
            addCriterion("body_weight <=", value, "bodyWeight");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andBodyWeightLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("body_weight <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBodyWeightIn(List<Integer> values) {
            addCriterion("body_weight in", values, "bodyWeight");
            return (Criteria) this;
        }

        public Criteria andBodyWeightNotIn(List<Integer> values) {
            addCriterion("body_weight not in", values, "bodyWeight");
            return (Criteria) this;
        }

        public Criteria andBodyWeightBetween(Integer value1, Integer value2) {
            addCriterion("body_weight between", value1, value2, "bodyWeight");
            return (Criteria) this;
        }

        public Criteria andBodyWeightNotBetween(Integer value1, Integer value2) {
            addCriterion("body_weight not between", value1, value2, "bodyWeight");
            return (Criteria) this;
        }

        public Criteria andEmploymentDateIsNull() {
            addCriterion("employment_date is null");
            return (Criteria) this;
        }

        public Criteria andEmploymentDateIsNotNull() {
            addCriterion("employment_date is not null");
            return (Criteria) this;
        }

        public Criteria andEmploymentDateEqualTo(LocalDate value) {
            addCriterion("employment_date =", value, "employmentDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmploymentDateEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("employment_date = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmploymentDateNotEqualTo(LocalDate value) {
            addCriterion("employment_date <>", value, "employmentDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmploymentDateNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("employment_date <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmploymentDateGreaterThan(LocalDate value) {
            addCriterion("employment_date >", value, "employmentDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmploymentDateGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("employment_date > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmploymentDateGreaterThanOrEqualTo(LocalDate value) {
            addCriterion("employment_date >=", value, "employmentDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmploymentDateGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("employment_date >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmploymentDateLessThan(LocalDate value) {
            addCriterion("employment_date <", value, "employmentDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmploymentDateLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("employment_date < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmploymentDateLessThanOrEqualTo(LocalDate value) {
            addCriterion("employment_date <=", value, "employmentDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmploymentDateLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("employment_date <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmploymentDateIn(List<LocalDate> values) {
            addCriterion("employment_date in", values, "employmentDate");
            return (Criteria) this;
        }

        public Criteria andEmploymentDateNotIn(List<LocalDate> values) {
            addCriterion("employment_date not in", values, "employmentDate");
            return (Criteria) this;
        }

        public Criteria andEmploymentDateBetween(LocalDate value1, LocalDate value2) {
            addCriterion("employment_date between", value1, value2, "employmentDate");
            return (Criteria) this;
        }

        public Criteria andEmploymentDateNotBetween(LocalDate value1, LocalDate value2) {
            addCriterion("employment_date not between", value1, value2, "employmentDate");
            return (Criteria) this;
        }

        public Criteria andEmploymentConfirmDateIsNull() {
            addCriterion("employment_confirm_date is null");
            return (Criteria) this;
        }

        public Criteria andEmploymentConfirmDateIsNotNull() {
            addCriterion("employment_confirm_date is not null");
            return (Criteria) this;
        }

        public Criteria andEmploymentConfirmDateEqualTo(LocalDate value) {
            addCriterion("employment_confirm_date =", value, "employmentConfirmDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmploymentConfirmDateEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("employment_confirm_date = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmploymentConfirmDateNotEqualTo(LocalDate value) {
            addCriterion("employment_confirm_date <>", value, "employmentConfirmDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmploymentConfirmDateNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("employment_confirm_date <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmploymentConfirmDateGreaterThan(LocalDate value) {
            addCriterion("employment_confirm_date >", value, "employmentConfirmDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmploymentConfirmDateGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("employment_confirm_date > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmploymentConfirmDateGreaterThanOrEqualTo(LocalDate value) {
            addCriterion("employment_confirm_date >=", value, "employmentConfirmDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmploymentConfirmDateGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("employment_confirm_date >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmploymentConfirmDateLessThan(LocalDate value) {
            addCriterion("employment_confirm_date <", value, "employmentConfirmDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmploymentConfirmDateLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("employment_confirm_date < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmploymentConfirmDateLessThanOrEqualTo(LocalDate value) {
            addCriterion("employment_confirm_date <=", value, "employmentConfirmDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmploymentConfirmDateLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("employment_confirm_date <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmploymentConfirmDateIn(List<LocalDate> values) {
            addCriterion("employment_confirm_date in", values, "employmentConfirmDate");
            return (Criteria) this;
        }

        public Criteria andEmploymentConfirmDateNotIn(List<LocalDate> values) {
            addCriterion("employment_confirm_date not in", values, "employmentConfirmDate");
            return (Criteria) this;
        }

        public Criteria andEmploymentConfirmDateBetween(LocalDate value1, LocalDate value2) {
            addCriterion("employment_confirm_date between", value1, value2, "employmentConfirmDate");
            return (Criteria) this;
        }

        public Criteria andEmploymentConfirmDateNotBetween(LocalDate value1, LocalDate value2) {
            addCriterion("employment_confirm_date not between", value1, value2, "employmentConfirmDate");
            return (Criteria) this;
        }

        public Criteria andFirstEmploymentDateIsNull() {
            addCriterion("first_employment_date is null");
            return (Criteria) this;
        }

        public Criteria andFirstEmploymentDateIsNotNull() {
            addCriterion("first_employment_date is not null");
            return (Criteria) this;
        }

        public Criteria andFirstEmploymentDateEqualTo(LocalDate value) {
            addCriterion("first_employment_date =", value, "firstEmploymentDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andFirstEmploymentDateEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("first_employment_date = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFirstEmploymentDateNotEqualTo(LocalDate value) {
            addCriterion("first_employment_date <>", value, "firstEmploymentDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andFirstEmploymentDateNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("first_employment_date <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFirstEmploymentDateGreaterThan(LocalDate value) {
            addCriterion("first_employment_date >", value, "firstEmploymentDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andFirstEmploymentDateGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("first_employment_date > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFirstEmploymentDateGreaterThanOrEqualTo(LocalDate value) {
            addCriterion("first_employment_date >=", value, "firstEmploymentDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andFirstEmploymentDateGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("first_employment_date >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFirstEmploymentDateLessThan(LocalDate value) {
            addCriterion("first_employment_date <", value, "firstEmploymentDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andFirstEmploymentDateLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("first_employment_date < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFirstEmploymentDateLessThanOrEqualTo(LocalDate value) {
            addCriterion("first_employment_date <=", value, "firstEmploymentDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andFirstEmploymentDateLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("first_employment_date <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFirstEmploymentDateIn(List<LocalDate> values) {
            addCriterion("first_employment_date in", values, "firstEmploymentDate");
            return (Criteria) this;
        }

        public Criteria andFirstEmploymentDateNotIn(List<LocalDate> values) {
            addCriterion("first_employment_date not in", values, "firstEmploymentDate");
            return (Criteria) this;
        }

        public Criteria andFirstEmploymentDateBetween(LocalDate value1, LocalDate value2) {
            addCriterion("first_employment_date between", value1, value2, "firstEmploymentDate");
            return (Criteria) this;
        }

        public Criteria andFirstEmploymentDateNotBetween(LocalDate value1, LocalDate value2) {
            addCriterion("first_employment_date not between", value1, value2, "firstEmploymentDate");
            return (Criteria) this;
        }

        public Criteria andFirstWorkDateIsNull() {
            addCriterion("first_work_date is null");
            return (Criteria) this;
        }

        public Criteria andFirstWorkDateIsNotNull() {
            addCriterion("first_work_date is not null");
            return (Criteria) this;
        }

        public Criteria andFirstWorkDateEqualTo(LocalDate value) {
            addCriterion("first_work_date =", value, "firstWorkDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andFirstWorkDateEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("first_work_date = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFirstWorkDateNotEqualTo(LocalDate value) {
            addCriterion("first_work_date <>", value, "firstWorkDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andFirstWorkDateNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("first_work_date <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFirstWorkDateGreaterThan(LocalDate value) {
            addCriterion("first_work_date >", value, "firstWorkDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andFirstWorkDateGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("first_work_date > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFirstWorkDateGreaterThanOrEqualTo(LocalDate value) {
            addCriterion("first_work_date >=", value, "firstWorkDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andFirstWorkDateGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("first_work_date >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFirstWorkDateLessThan(LocalDate value) {
            addCriterion("first_work_date <", value, "firstWorkDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andFirstWorkDateLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("first_work_date < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFirstWorkDateLessThanOrEqualTo(LocalDate value) {
            addCriterion("first_work_date <=", value, "firstWorkDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andFirstWorkDateLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("first_work_date <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFirstWorkDateIn(List<LocalDate> values) {
            addCriterion("first_work_date in", values, "firstWorkDate");
            return (Criteria) this;
        }

        public Criteria andFirstWorkDateNotIn(List<LocalDate> values) {
            addCriterion("first_work_date not in", values, "firstWorkDate");
            return (Criteria) this;
        }

        public Criteria andFirstWorkDateBetween(LocalDate value1, LocalDate value2) {
            addCriterion("first_work_date between", value1, value2, "firstWorkDate");
            return (Criteria) this;
        }

        public Criteria andFirstWorkDateNotBetween(LocalDate value1, LocalDate value2) {
            addCriterion("first_work_date not between", value1, value2, "firstWorkDate");
            return (Criteria) this;
        }

        public Criteria andOrgIdIsNull() {
            addCriterion("org_id is null");
            return (Criteria) this;
        }

        public Criteria andOrgIdIsNotNull() {
            addCriterion("org_id is not null");
            return (Criteria) this;
        }

        public Criteria andOrgIdEqualTo(String value) {
            addCriterion("org_id =", value, "orgId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andOrgIdEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("org_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrgIdNotEqualTo(String value) {
            addCriterion("org_id <>", value, "orgId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andOrgIdNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("org_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrgIdGreaterThan(String value) {
            addCriterion("org_id >", value, "orgId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andOrgIdGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("org_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrgIdGreaterThanOrEqualTo(String value) {
            addCriterion("org_id >=", value, "orgId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andOrgIdGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("org_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrgIdLessThan(String value) {
            addCriterion("org_id <", value, "orgId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andOrgIdLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("org_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrgIdLessThanOrEqualTo(String value) {
            addCriterion("org_id <=", value, "orgId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andOrgIdLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("org_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andOrgIdLike(String value) {
            addCriterion("org_id like", value, "orgId");
            return (Criteria) this;
        }

        public Criteria andOrgIdNotLike(String value) {
            addCriterion("org_id not like", value, "orgId");
            return (Criteria) this;
        }

        public Criteria andOrgIdIn(List<String> values) {
            addCriterion("org_id in", values, "orgId");
            return (Criteria) this;
        }

        public Criteria andOrgIdNotIn(List<String> values) {
            addCriterion("org_id not in", values, "orgId");
            return (Criteria) this;
        }

        public Criteria andOrgIdBetween(String value1, String value2) {
            addCriterion("org_id between", value1, value2, "orgId");
            return (Criteria) this;
        }

        public Criteria andOrgIdNotBetween(String value1, String value2) {
            addCriterion("org_id not between", value1, value2, "orgId");
            return (Criteria) this;
        }

        public Criteria andPositionCodeIsNull() {
            addCriterion("position_code is null");
            return (Criteria) this;
        }

        public Criteria andPositionCodeIsNotNull() {
            addCriterion("position_code is not null");
            return (Criteria) this;
        }

        public Criteria andPositionCodeEqualTo(String value) {
            addCriterion("position_code =", value, "positionCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andPositionCodeEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("position_code = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPositionCodeNotEqualTo(String value) {
            addCriterion("position_code <>", value, "positionCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andPositionCodeNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("position_code <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPositionCodeGreaterThan(String value) {
            addCriterion("position_code >", value, "positionCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andPositionCodeGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("position_code > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPositionCodeGreaterThanOrEqualTo(String value) {
            addCriterion("position_code >=", value, "positionCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andPositionCodeGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("position_code >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPositionCodeLessThan(String value) {
            addCriterion("position_code <", value, "positionCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andPositionCodeLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("position_code < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPositionCodeLessThanOrEqualTo(String value) {
            addCriterion("position_code <=", value, "positionCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andPositionCodeLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("position_code <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPositionCodeLike(String value) {
            addCriterion("position_code like", value, "positionCode");
            return (Criteria) this;
        }

        public Criteria andPositionCodeNotLike(String value) {
            addCriterion("position_code not like", value, "positionCode");
            return (Criteria) this;
        }

        public Criteria andPositionCodeIn(List<String> values) {
            addCriterion("position_code in", values, "positionCode");
            return (Criteria) this;
        }

        public Criteria andPositionCodeNotIn(List<String> values) {
            addCriterion("position_code not in", values, "positionCode");
            return (Criteria) this;
        }

        public Criteria andPositionCodeBetween(String value1, String value2) {
            addCriterion("position_code between", value1, value2, "positionCode");
            return (Criteria) this;
        }

        public Criteria andPositionCodeNotBetween(String value1, String value2) {
            addCriterion("position_code not between", value1, value2, "positionCode");
            return (Criteria) this;
        }

        public Criteria andEmployeeTitleCodeIsNull() {
            addCriterion("employee_title_code is null");
            return (Criteria) this;
        }

        public Criteria andEmployeeTitleCodeIsNotNull() {
            addCriterion("employee_title_code is not null");
            return (Criteria) this;
        }

        public Criteria andEmployeeTitleCodeEqualTo(String value) {
            addCriterion("employee_title_code =", value, "employeeTitleCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmployeeTitleCodeEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("employee_title_code = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmployeeTitleCodeNotEqualTo(String value) {
            addCriterion("employee_title_code <>", value, "employeeTitleCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmployeeTitleCodeNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("employee_title_code <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmployeeTitleCodeGreaterThan(String value) {
            addCriterion("employee_title_code >", value, "employeeTitleCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmployeeTitleCodeGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("employee_title_code > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmployeeTitleCodeGreaterThanOrEqualTo(String value) {
            addCriterion("employee_title_code >=", value, "employeeTitleCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmployeeTitleCodeGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("employee_title_code >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmployeeTitleCodeLessThan(String value) {
            addCriterion("employee_title_code <", value, "employeeTitleCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmployeeTitleCodeLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("employee_title_code < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmployeeTitleCodeLessThanOrEqualTo(String value) {
            addCriterion("employee_title_code <=", value, "employeeTitleCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmployeeTitleCodeLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("employee_title_code <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmployeeTitleCodeLike(String value) {
            addCriterion("employee_title_code like", value, "employeeTitleCode");
            return (Criteria) this;
        }

        public Criteria andEmployeeTitleCodeNotLike(String value) {
            addCriterion("employee_title_code not like", value, "employeeTitleCode");
            return (Criteria) this;
        }

        public Criteria andEmployeeTitleCodeIn(List<String> values) {
            addCriterion("employee_title_code in", values, "employeeTitleCode");
            return (Criteria) this;
        }

        public Criteria andEmployeeTitleCodeNotIn(List<String> values) {
            addCriterion("employee_title_code not in", values, "employeeTitleCode");
            return (Criteria) this;
        }

        public Criteria andEmployeeTitleCodeBetween(String value1, String value2) {
            addCriterion("employee_title_code between", value1, value2, "employeeTitleCode");
            return (Criteria) this;
        }

        public Criteria andEmployeeTitleCodeNotBetween(String value1, String value2) {
            addCriterion("employee_title_code not between", value1, value2, "employeeTitleCode");
            return (Criteria) this;
        }

        public Criteria andRankCodeIsNull() {
            addCriterion("rank_code is null");
            return (Criteria) this;
        }

        public Criteria andRankCodeIsNotNull() {
            addCriterion("rank_code is not null");
            return (Criteria) this;
        }

        public Criteria andRankCodeEqualTo(String value) {
            addCriterion("rank_code =", value, "rankCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andRankCodeEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("rank_code = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRankCodeNotEqualTo(String value) {
            addCriterion("rank_code <>", value, "rankCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andRankCodeNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("rank_code <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRankCodeGreaterThan(String value) {
            addCriterion("rank_code >", value, "rankCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andRankCodeGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("rank_code > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRankCodeGreaterThanOrEqualTo(String value) {
            addCriterion("rank_code >=", value, "rankCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andRankCodeGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("rank_code >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRankCodeLessThan(String value) {
            addCriterion("rank_code <", value, "rankCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andRankCodeLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("rank_code < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRankCodeLessThanOrEqualTo(String value) {
            addCriterion("rank_code <=", value, "rankCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andRankCodeLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("rank_code <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRankCodeLike(String value) {
            addCriterion("rank_code like", value, "rankCode");
            return (Criteria) this;
        }

        public Criteria andRankCodeNotLike(String value) {
            addCriterion("rank_code not like", value, "rankCode");
            return (Criteria) this;
        }

        public Criteria andRankCodeIn(List<String> values) {
            addCriterion("rank_code in", values, "rankCode");
            return (Criteria) this;
        }

        public Criteria andRankCodeNotIn(List<String> values) {
            addCriterion("rank_code not in", values, "rankCode");
            return (Criteria) this;
        }

        public Criteria andRankCodeBetween(String value1, String value2) {
            addCriterion("rank_code between", value1, value2, "rankCode");
            return (Criteria) this;
        }

        public Criteria andRankCodeNotBetween(String value1, String value2) {
            addCriterion("rank_code not between", value1, value2, "rankCode");
            return (Criteria) this;
        }

        public Criteria andWorkKindCodeIsNull() {
            addCriterion("work_kind_code is null");
            return (Criteria) this;
        }

        public Criteria andWorkKindCodeIsNotNull() {
            addCriterion("work_kind_code is not null");
            return (Criteria) this;
        }

        public Criteria andWorkKindCodeEqualTo(String value) {
            addCriterion("work_kind_code =", value, "workKindCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andWorkKindCodeEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("work_kind_code = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWorkKindCodeNotEqualTo(String value) {
            addCriterion("work_kind_code <>", value, "workKindCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andWorkKindCodeNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("work_kind_code <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWorkKindCodeGreaterThan(String value) {
            addCriterion("work_kind_code >", value, "workKindCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andWorkKindCodeGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("work_kind_code > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWorkKindCodeGreaterThanOrEqualTo(String value) {
            addCriterion("work_kind_code >=", value, "workKindCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andWorkKindCodeGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("work_kind_code >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWorkKindCodeLessThan(String value) {
            addCriterion("work_kind_code <", value, "workKindCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andWorkKindCodeLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("work_kind_code < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWorkKindCodeLessThanOrEqualTo(String value) {
            addCriterion("work_kind_code <=", value, "workKindCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andWorkKindCodeLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("work_kind_code <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWorkKindCodeLike(String value) {
            addCriterion("work_kind_code like", value, "workKindCode");
            return (Criteria) this;
        }

        public Criteria andWorkKindCodeNotLike(String value) {
            addCriterion("work_kind_code not like", value, "workKindCode");
            return (Criteria) this;
        }

        public Criteria andWorkKindCodeIn(List<String> values) {
            addCriterion("work_kind_code in", values, "workKindCode");
            return (Criteria) this;
        }

        public Criteria andWorkKindCodeNotIn(List<String> values) {
            addCriterion("work_kind_code not in", values, "workKindCode");
            return (Criteria) this;
        }

        public Criteria andWorkKindCodeBetween(String value1, String value2) {
            addCriterion("work_kind_code between", value1, value2, "workKindCode");
            return (Criteria) this;
        }

        public Criteria andWorkKindCodeNotBetween(String value1, String value2) {
            addCriterion("work_kind_code not between", value1, value2, "workKindCode");
            return (Criteria) this;
        }

        public Criteria andLeaveDateIsNull() {
            addCriterion("leave_date is null");
            return (Criteria) this;
        }

        public Criteria andLeaveDateIsNotNull() {
            addCriterion("leave_date is not null");
            return (Criteria) this;
        }

        public Criteria andLeaveDateEqualTo(LocalDate value) {
            addCriterion("leave_date =", value, "leaveDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andLeaveDateEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("leave_date = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLeaveDateNotEqualTo(LocalDate value) {
            addCriterion("leave_date <>", value, "leaveDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andLeaveDateNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("leave_date <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLeaveDateGreaterThan(LocalDate value) {
            addCriterion("leave_date >", value, "leaveDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andLeaveDateGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("leave_date > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLeaveDateGreaterThanOrEqualTo(LocalDate value) {
            addCriterion("leave_date >=", value, "leaveDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andLeaveDateGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("leave_date >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLeaveDateLessThan(LocalDate value) {
            addCriterion("leave_date <", value, "leaveDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andLeaveDateLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("leave_date < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLeaveDateLessThanOrEqualTo(LocalDate value) {
            addCriterion("leave_date <=", value, "leaveDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andLeaveDateLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("leave_date <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLeaveDateIn(List<LocalDate> values) {
            addCriterion("leave_date in", values, "leaveDate");
            return (Criteria) this;
        }

        public Criteria andLeaveDateNotIn(List<LocalDate> values) {
            addCriterion("leave_date not in", values, "leaveDate");
            return (Criteria) this;
        }

        public Criteria andLeaveDateBetween(LocalDate value1, LocalDate value2) {
            addCriterion("leave_date between", value1, value2, "leaveDate");
            return (Criteria) this;
        }

        public Criteria andLeaveDateNotBetween(LocalDate value1, LocalDate value2) {
            addCriterion("leave_date not between", value1, value2, "leaveDate");
            return (Criteria) this;
        }

        public Criteria andLeaveResonIsNull() {
            addCriterion("leave_reson is null");
            return (Criteria) this;
        }

        public Criteria andLeaveResonIsNotNull() {
            addCriterion("leave_reson is not null");
            return (Criteria) this;
        }

        public Criteria andLeaveResonEqualTo(String value) {
            addCriterion("leave_reson =", value, "leaveReson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andLeaveResonEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("leave_reson = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLeaveResonNotEqualTo(String value) {
            addCriterion("leave_reson <>", value, "leaveReson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andLeaveResonNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("leave_reson <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLeaveResonGreaterThan(String value) {
            addCriterion("leave_reson >", value, "leaveReson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andLeaveResonGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("leave_reson > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLeaveResonGreaterThanOrEqualTo(String value) {
            addCriterion("leave_reson >=", value, "leaveReson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andLeaveResonGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("leave_reson >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLeaveResonLessThan(String value) {
            addCriterion("leave_reson <", value, "leaveReson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andLeaveResonLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("leave_reson < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLeaveResonLessThanOrEqualTo(String value) {
            addCriterion("leave_reson <=", value, "leaveReson");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andLeaveResonLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("leave_reson <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLeaveResonLike(String value) {
            addCriterion("leave_reson like", value, "leaveReson");
            return (Criteria) this;
        }

        public Criteria andLeaveResonNotLike(String value) {
            addCriterion("leave_reson not like", value, "leaveReson");
            return (Criteria) this;
        }

        public Criteria andLeaveResonIn(List<String> values) {
            addCriterion("leave_reson in", values, "leaveReson");
            return (Criteria) this;
        }

        public Criteria andLeaveResonNotIn(List<String> values) {
            addCriterion("leave_reson not in", values, "leaveReson");
            return (Criteria) this;
        }

        public Criteria andLeaveResonBetween(String value1, String value2) {
            addCriterion("leave_reson between", value1, value2, "leaveReson");
            return (Criteria) this;
        }

        public Criteria andLeaveResonNotBetween(String value1, String value2) {
            addCriterion("leave_reson not between", value1, value2, "leaveReson");
            return (Criteria) this;
        }

        public Criteria andPayrollCardBankCodeIsNull() {
            addCriterion("payroll_card_bank_code is null");
            return (Criteria) this;
        }

        public Criteria andPayrollCardBankCodeIsNotNull() {
            addCriterion("payroll_card_bank_code is not null");
            return (Criteria) this;
        }

        public Criteria andPayrollCardBankCodeEqualTo(String value) {
            addCriterion("payroll_card_bank_code =", value, "payrollCardBankCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andPayrollCardBankCodeEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("payroll_card_bank_code = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayrollCardBankCodeNotEqualTo(String value) {
            addCriterion("payroll_card_bank_code <>", value, "payrollCardBankCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andPayrollCardBankCodeNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("payroll_card_bank_code <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayrollCardBankCodeGreaterThan(String value) {
            addCriterion("payroll_card_bank_code >", value, "payrollCardBankCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andPayrollCardBankCodeGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("payroll_card_bank_code > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayrollCardBankCodeGreaterThanOrEqualTo(String value) {
            addCriterion("payroll_card_bank_code >=", value, "payrollCardBankCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andPayrollCardBankCodeGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("payroll_card_bank_code >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayrollCardBankCodeLessThan(String value) {
            addCriterion("payroll_card_bank_code <", value, "payrollCardBankCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andPayrollCardBankCodeLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("payroll_card_bank_code < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayrollCardBankCodeLessThanOrEqualTo(String value) {
            addCriterion("payroll_card_bank_code <=", value, "payrollCardBankCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andPayrollCardBankCodeLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("payroll_card_bank_code <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayrollCardBankCodeLike(String value) {
            addCriterion("payroll_card_bank_code like", value, "payrollCardBankCode");
            return (Criteria) this;
        }

        public Criteria andPayrollCardBankCodeNotLike(String value) {
            addCriterion("payroll_card_bank_code not like", value, "payrollCardBankCode");
            return (Criteria) this;
        }

        public Criteria andPayrollCardBankCodeIn(List<String> values) {
            addCriterion("payroll_card_bank_code in", values, "payrollCardBankCode");
            return (Criteria) this;
        }

        public Criteria andPayrollCardBankCodeNotIn(List<String> values) {
            addCriterion("payroll_card_bank_code not in", values, "payrollCardBankCode");
            return (Criteria) this;
        }

        public Criteria andPayrollCardBankCodeBetween(String value1, String value2) {
            addCriterion("payroll_card_bank_code between", value1, value2, "payrollCardBankCode");
            return (Criteria) this;
        }

        public Criteria andPayrollCardBankCodeNotBetween(String value1, String value2) {
            addCriterion("payroll_card_bank_code not between", value1, value2, "payrollCardBankCode");
            return (Criteria) this;
        }

        public Criteria andPayrollCardIsNull() {
            addCriterion("payroll_card is null");
            return (Criteria) this;
        }

        public Criteria andPayrollCardIsNotNull() {
            addCriterion("payroll_card is not null");
            return (Criteria) this;
        }

        public Criteria andPayrollCardEqualTo(String value) {
            addCriterion("payroll_card =", value, "payrollCard");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andPayrollCardEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("payroll_card = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayrollCardNotEqualTo(String value) {
            addCriterion("payroll_card <>", value, "payrollCard");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andPayrollCardNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("payroll_card <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayrollCardGreaterThan(String value) {
            addCriterion("payroll_card >", value, "payrollCard");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andPayrollCardGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("payroll_card > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayrollCardGreaterThanOrEqualTo(String value) {
            addCriterion("payroll_card >=", value, "payrollCard");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andPayrollCardGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("payroll_card >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayrollCardLessThan(String value) {
            addCriterion("payroll_card <", value, "payrollCard");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andPayrollCardLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("payroll_card < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayrollCardLessThanOrEqualTo(String value) {
            addCriterion("payroll_card <=", value, "payrollCard");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andPayrollCardLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("payroll_card <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayrollCardLike(String value) {
            addCriterion("payroll_card like", value, "payrollCard");
            return (Criteria) this;
        }

        public Criteria andPayrollCardNotLike(String value) {
            addCriterion("payroll_card not like", value, "payrollCard");
            return (Criteria) this;
        }

        public Criteria andPayrollCardIn(List<String> values) {
            addCriterion("payroll_card in", values, "payrollCard");
            return (Criteria) this;
        }

        public Criteria andPayrollCardNotIn(List<String> values) {
            addCriterion("payroll_card not in", values, "payrollCard");
            return (Criteria) this;
        }

        public Criteria andPayrollCardBetween(String value1, String value2) {
            addCriterion("payroll_card between", value1, value2, "payrollCard");
            return (Criteria) this;
        }

        public Criteria andPayrollCardNotBetween(String value1, String value2) {
            addCriterion("payroll_card not between", value1, value2, "payrollCard");
            return (Criteria) this;
        }

        public Criteria andSalaryTplIdIsNull() {
            addCriterion("salary_tpl_id is null");
            return (Criteria) this;
        }

        public Criteria andSalaryTplIdIsNotNull() {
            addCriterion("salary_tpl_id is not null");
            return (Criteria) this;
        }

        public Criteria andSalaryTplIdEqualTo(String value) {
            addCriterion("salary_tpl_id =", value, "salaryTplId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andSalaryTplIdEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("salary_tpl_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSalaryTplIdNotEqualTo(String value) {
            addCriterion("salary_tpl_id <>", value, "salaryTplId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andSalaryTplIdNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("salary_tpl_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSalaryTplIdGreaterThan(String value) {
            addCriterion("salary_tpl_id >", value, "salaryTplId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andSalaryTplIdGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("salary_tpl_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSalaryTplIdGreaterThanOrEqualTo(String value) {
            addCriterion("salary_tpl_id >=", value, "salaryTplId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andSalaryTplIdGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("salary_tpl_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSalaryTplIdLessThan(String value) {
            addCriterion("salary_tpl_id <", value, "salaryTplId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andSalaryTplIdLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("salary_tpl_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSalaryTplIdLessThanOrEqualTo(String value) {
            addCriterion("salary_tpl_id <=", value, "salaryTplId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andSalaryTplIdLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("salary_tpl_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSalaryTplIdLike(String value) {
            addCriterion("salary_tpl_id like", value, "salaryTplId");
            return (Criteria) this;
        }

        public Criteria andSalaryTplIdNotLike(String value) {
            addCriterion("salary_tpl_id not like", value, "salaryTplId");
            return (Criteria) this;
        }

        public Criteria andSalaryTplIdIn(List<String> values) {
            addCriterion("salary_tpl_id in", values, "salaryTplId");
            return (Criteria) this;
        }

        public Criteria andSalaryTplIdNotIn(List<String> values) {
            addCriterion("salary_tpl_id not in", values, "salaryTplId");
            return (Criteria) this;
        }

        public Criteria andSalaryTplIdBetween(String value1, String value2) {
            addCriterion("salary_tpl_id between", value1, value2, "salaryTplId");
            return (Criteria) this;
        }

        public Criteria andSalaryTplIdNotBetween(String value1, String value2) {
            addCriterion("salary_tpl_id not between", value1, value2, "salaryTplId");
            return (Criteria) this;
        }

        public Criteria andSalaryPayOutIsNull() {
            addCriterion("salary_pay_out is null");
            return (Criteria) this;
        }

        public Criteria andSalaryPayOutIsNotNull() {
            addCriterion("salary_pay_out is not null");
            return (Criteria) this;
        }

        public Criteria andSalaryPayOutEqualTo(String value) {
            addCriterion("salary_pay_out =", value, "salaryPayOut");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andSalaryPayOutEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("salary_pay_out = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSalaryPayOutNotEqualTo(String value) {
            addCriterion("salary_pay_out <>", value, "salaryPayOut");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andSalaryPayOutNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("salary_pay_out <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSalaryPayOutGreaterThan(String value) {
            addCriterion("salary_pay_out >", value, "salaryPayOut");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andSalaryPayOutGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("salary_pay_out > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSalaryPayOutGreaterThanOrEqualTo(String value) {
            addCriterion("salary_pay_out >=", value, "salaryPayOut");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andSalaryPayOutGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("salary_pay_out >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSalaryPayOutLessThan(String value) {
            addCriterion("salary_pay_out <", value, "salaryPayOut");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andSalaryPayOutLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("salary_pay_out < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSalaryPayOutLessThanOrEqualTo(String value) {
            addCriterion("salary_pay_out <=", value, "salaryPayOut");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andSalaryPayOutLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("salary_pay_out <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSalaryPayOutLike(String value) {
            addCriterion("salary_pay_out like", value, "salaryPayOut");
            return (Criteria) this;
        }

        public Criteria andSalaryPayOutNotLike(String value) {
            addCriterion("salary_pay_out not like", value, "salaryPayOut");
            return (Criteria) this;
        }

        public Criteria andSalaryPayOutIn(List<String> values) {
            addCriterion("salary_pay_out in", values, "salaryPayOut");
            return (Criteria) this;
        }

        public Criteria andSalaryPayOutNotIn(List<String> values) {
            addCriterion("salary_pay_out not in", values, "salaryPayOut");
            return (Criteria) this;
        }

        public Criteria andSalaryPayOutBetween(String value1, String value2) {
            addCriterion("salary_pay_out between", value1, value2, "salaryPayOut");
            return (Criteria) this;
        }

        public Criteria andSalaryPayOutNotBetween(String value1, String value2) {
            addCriterion("salary_pay_out not between", value1, value2, "salaryPayOut");
            return (Criteria) this;
        }

        public Criteria andSalaryNotesIsNull() {
            addCriterion("salary_notes is null");
            return (Criteria) this;
        }

        public Criteria andSalaryNotesIsNotNull() {
            addCriterion("salary_notes is not null");
            return (Criteria) this;
        }

        public Criteria andSalaryNotesEqualTo(String value) {
            addCriterion("salary_notes =", value, "salaryNotes");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andSalaryNotesEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("salary_notes = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSalaryNotesNotEqualTo(String value) {
            addCriterion("salary_notes <>", value, "salaryNotes");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andSalaryNotesNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("salary_notes <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSalaryNotesGreaterThan(String value) {
            addCriterion("salary_notes >", value, "salaryNotes");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andSalaryNotesGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("salary_notes > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSalaryNotesGreaterThanOrEqualTo(String value) {
            addCriterion("salary_notes >=", value, "salaryNotes");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andSalaryNotesGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("salary_notes >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSalaryNotesLessThan(String value) {
            addCriterion("salary_notes <", value, "salaryNotes");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andSalaryNotesLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("salary_notes < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSalaryNotesLessThanOrEqualTo(String value) {
            addCriterion("salary_notes <=", value, "salaryNotes");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andSalaryNotesLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("salary_notes <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSalaryNotesLike(String value) {
            addCriterion("salary_notes like", value, "salaryNotes");
            return (Criteria) this;
        }

        public Criteria andSalaryNotesNotLike(String value) {
            addCriterion("salary_notes not like", value, "salaryNotes");
            return (Criteria) this;
        }

        public Criteria andSalaryNotesIn(List<String> values) {
            addCriterion("salary_notes in", values, "salaryNotes");
            return (Criteria) this;
        }

        public Criteria andSalaryNotesNotIn(List<String> values) {
            addCriterion("salary_notes not in", values, "salaryNotes");
            return (Criteria) this;
        }

        public Criteria andSalaryNotesBetween(String value1, String value2) {
            addCriterion("salary_notes between", value1, value2, "salaryNotes");
            return (Criteria) this;
        }

        public Criteria andSalaryNotesNotBetween(String value1, String value2) {
            addCriterion("salary_notes not between", value1, value2, "salaryNotes");
            return (Criteria) this;
        }

        public Criteria andPersonPictureIdIsNull() {
            addCriterion("person_picture_id is null");
            return (Criteria) this;
        }

        public Criteria andPersonPictureIdIsNotNull() {
            addCriterion("person_picture_id is not null");
            return (Criteria) this;
        }

        public Criteria andPersonPictureIdEqualTo(String value) {
            addCriterion("person_picture_id =", value, "personPictureId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andPersonPictureIdEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("person_picture_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPersonPictureIdNotEqualTo(String value) {
            addCriterion("person_picture_id <>", value, "personPictureId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andPersonPictureIdNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("person_picture_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPersonPictureIdGreaterThan(String value) {
            addCriterion("person_picture_id >", value, "personPictureId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andPersonPictureIdGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("person_picture_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPersonPictureIdGreaterThanOrEqualTo(String value) {
            addCriterion("person_picture_id >=", value, "personPictureId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andPersonPictureIdGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("person_picture_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPersonPictureIdLessThan(String value) {
            addCriterion("person_picture_id <", value, "personPictureId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andPersonPictureIdLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("person_picture_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPersonPictureIdLessThanOrEqualTo(String value) {
            addCriterion("person_picture_id <=", value, "personPictureId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andPersonPictureIdLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("person_picture_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPersonPictureIdLike(String value) {
            addCriterion("person_picture_id like", value, "personPictureId");
            return (Criteria) this;
        }

        public Criteria andPersonPictureIdNotLike(String value) {
            addCriterion("person_picture_id not like", value, "personPictureId");
            return (Criteria) this;
        }

        public Criteria andPersonPictureIdIn(List<String> values) {
            addCriterion("person_picture_id in", values, "personPictureId");
            return (Criteria) this;
        }

        public Criteria andPersonPictureIdNotIn(List<String> values) {
            addCriterion("person_picture_id not in", values, "personPictureId");
            return (Criteria) this;
        }

        public Criteria andPersonPictureIdBetween(String value1, String value2) {
            addCriterion("person_picture_id between", value1, value2, "personPictureId");
            return (Criteria) this;
        }

        public Criteria andPersonPictureIdNotBetween(String value1, String value2) {
            addCriterion("person_picture_id not between", value1, value2, "personPictureId");
            return (Criteria) this;
        }

        public Criteria andEmployeeIdIsNull() {
            addCriterion("employee_id is null");
            return (Criteria) this;
        }

        public Criteria andEmployeeIdIsNotNull() {
            addCriterion("employee_id is not null");
            return (Criteria) this;
        }

        public Criteria andEmployeeIdEqualTo(String value) {
            addCriterion("employee_id =", value, "employeeId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmployeeIdEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("employee_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmployeeIdNotEqualTo(String value) {
            addCriterion("employee_id <>", value, "employeeId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmployeeIdNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("employee_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmployeeIdGreaterThan(String value) {
            addCriterion("employee_id >", value, "employeeId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmployeeIdGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("employee_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmployeeIdGreaterThanOrEqualTo(String value) {
            addCriterion("employee_id >=", value, "employeeId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmployeeIdGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("employee_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmployeeIdLessThan(String value) {
            addCriterion("employee_id <", value, "employeeId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmployeeIdLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("employee_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmployeeIdLessThanOrEqualTo(String value) {
            addCriterion("employee_id <=", value, "employeeId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andEmployeeIdLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("employee_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andEmployeeIdLike(String value) {
            addCriterion("employee_id like", value, "employeeId");
            return (Criteria) this;
        }

        public Criteria andEmployeeIdNotLike(String value) {
            addCriterion("employee_id not like", value, "employeeId");
            return (Criteria) this;
        }

        public Criteria andEmployeeIdIn(List<String> values) {
            addCriterion("employee_id in", values, "employeeId");
            return (Criteria) this;
        }

        public Criteria andEmployeeIdNotIn(List<String> values) {
            addCriterion("employee_id not in", values, "employeeId");
            return (Criteria) this;
        }

        public Criteria andEmployeeIdBetween(String value1, String value2) {
            addCriterion("employee_id between", value1, value2, "employeeId");
            return (Criteria) this;
        }

        public Criteria andEmployeeIdNotBetween(String value1, String value2) {
            addCriterion("employee_id not between", value1, value2, "employeeId");
            return (Criteria) this;
        }

        public Criteria andFileIdIsNull() {
            addCriterion("file_id is null");
            return (Criteria) this;
        }

        public Criteria andFileIdIsNotNull() {
            addCriterion("file_id is not null");
            return (Criteria) this;
        }

        public Criteria andFileIdEqualTo(String value) {
            addCriterion("file_id =", value, "fileId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andFileIdEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("file_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFileIdNotEqualTo(String value) {
            addCriterion("file_id <>", value, "fileId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andFileIdNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("file_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFileIdGreaterThan(String value) {
            addCriterion("file_id >", value, "fileId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andFileIdGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("file_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFileIdGreaterThanOrEqualTo(String value) {
            addCriterion("file_id >=", value, "fileId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andFileIdGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("file_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFileIdLessThan(String value) {
            addCriterion("file_id <", value, "fileId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andFileIdLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("file_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFileIdLessThanOrEqualTo(String value) {
            addCriterion("file_id <=", value, "fileId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andFileIdLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("file_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFileIdLike(String value) {
            addCriterion("file_id like", value, "fileId");
            return (Criteria) this;
        }

        public Criteria andFileIdNotLike(String value) {
            addCriterion("file_id not like", value, "fileId");
            return (Criteria) this;
        }

        public Criteria andFileIdIn(List<String> values) {
            addCriterion("file_id in", values, "fileId");
            return (Criteria) this;
        }

        public Criteria andFileIdNotIn(List<String> values) {
            addCriterion("file_id not in", values, "fileId");
            return (Criteria) this;
        }

        public Criteria andFileIdBetween(String value1, String value2) {
            addCriterion("file_id between", value1, value2, "fileId");
            return (Criteria) this;
        }

        public Criteria andFileIdNotBetween(String value1, String value2) {
            addCriterion("file_id not between", value1, value2, "fileId");
            return (Criteria) this;
        }

        public Criteria andContractDurationIsNull() {
            addCriterion("contract_duration is null");
            return (Criteria) this;
        }

        public Criteria andContractDurationIsNotNull() {
            addCriterion("contract_duration is not null");
            return (Criteria) this;
        }

        public Criteria andContractDurationEqualTo(String value) {
            addCriterion("contract_duration =", value, "contractDuration");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andContractDurationEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("contract_duration = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractDurationNotEqualTo(String value) {
            addCriterion("contract_duration <>", value, "contractDuration");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andContractDurationNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("contract_duration <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractDurationGreaterThan(String value) {
            addCriterion("contract_duration >", value, "contractDuration");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andContractDurationGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("contract_duration > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractDurationGreaterThanOrEqualTo(String value) {
            addCriterion("contract_duration >=", value, "contractDuration");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andContractDurationGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("contract_duration >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractDurationLessThan(String value) {
            addCriterion("contract_duration <", value, "contractDuration");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andContractDurationLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("contract_duration < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractDurationLessThanOrEqualTo(String value) {
            addCriterion("contract_duration <=", value, "contractDuration");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andContractDurationLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("contract_duration <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractDurationLike(String value) {
            addCriterion("contract_duration like", value, "contractDuration");
            return (Criteria) this;
        }

        public Criteria andContractDurationNotLike(String value) {
            addCriterion("contract_duration not like", value, "contractDuration");
            return (Criteria) this;
        }

        public Criteria andContractDurationIn(List<String> values) {
            addCriterion("contract_duration in", values, "contractDuration");
            return (Criteria) this;
        }

        public Criteria andContractDurationNotIn(List<String> values) {
            addCriterion("contract_duration not in", values, "contractDuration");
            return (Criteria) this;
        }

        public Criteria andContractDurationBetween(String value1, String value2) {
            addCriterion("contract_duration between", value1, value2, "contractDuration");
            return (Criteria) this;
        }

        public Criteria andContractDurationNotBetween(String value1, String value2) {
            addCriterion("contract_duration not between", value1, value2, "contractDuration");
            return (Criteria) this;
        }

        public Criteria andContractStartDateIsNull() {
            addCriterion("contract_start_date is null");
            return (Criteria) this;
        }

        public Criteria andContractStartDateIsNotNull() {
            addCriterion("contract_start_date is not null");
            return (Criteria) this;
        }

        public Criteria andContractStartDateEqualTo(LocalDate value) {
            addCriterion("contract_start_date =", value, "contractStartDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andContractStartDateEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("contract_start_date = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractStartDateNotEqualTo(LocalDate value) {
            addCriterion("contract_start_date <>", value, "contractStartDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andContractStartDateNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("contract_start_date <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractStartDateGreaterThan(LocalDate value) {
            addCriterion("contract_start_date >", value, "contractStartDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andContractStartDateGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("contract_start_date > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractStartDateGreaterThanOrEqualTo(LocalDate value) {
            addCriterion("contract_start_date >=", value, "contractStartDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andContractStartDateGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("contract_start_date >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractStartDateLessThan(LocalDate value) {
            addCriterion("contract_start_date <", value, "contractStartDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andContractStartDateLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("contract_start_date < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractStartDateLessThanOrEqualTo(LocalDate value) {
            addCriterion("contract_start_date <=", value, "contractStartDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andContractStartDateLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("contract_start_date <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractStartDateIn(List<LocalDate> values) {
            addCriterion("contract_start_date in", values, "contractStartDate");
            return (Criteria) this;
        }

        public Criteria andContractStartDateNotIn(List<LocalDate> values) {
            addCriterion("contract_start_date not in", values, "contractStartDate");
            return (Criteria) this;
        }

        public Criteria andContractStartDateBetween(LocalDate value1, LocalDate value2) {
            addCriterion("contract_start_date between", value1, value2, "contractStartDate");
            return (Criteria) this;
        }

        public Criteria andContractStartDateNotBetween(LocalDate value1, LocalDate value2) {
            addCriterion("contract_start_date not between", value1, value2, "contractStartDate");
            return (Criteria) this;
        }

        public Criteria andContractFinishDateIsNull() {
            addCriterion("contract_finish_date is null");
            return (Criteria) this;
        }

        public Criteria andContractFinishDateIsNotNull() {
            addCriterion("contract_finish_date is not null");
            return (Criteria) this;
        }

        public Criteria andContractFinishDateEqualTo(LocalDate value) {
            addCriterion("contract_finish_date =", value, "contractFinishDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andContractFinishDateEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("contract_finish_date = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractFinishDateNotEqualTo(LocalDate value) {
            addCriterion("contract_finish_date <>", value, "contractFinishDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andContractFinishDateNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("contract_finish_date <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractFinishDateGreaterThan(LocalDate value) {
            addCriterion("contract_finish_date >", value, "contractFinishDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andContractFinishDateGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("contract_finish_date > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractFinishDateGreaterThanOrEqualTo(LocalDate value) {
            addCriterion("contract_finish_date >=", value, "contractFinishDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andContractFinishDateGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("contract_finish_date >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractFinishDateLessThan(LocalDate value) {
            addCriterion("contract_finish_date <", value, "contractFinishDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andContractFinishDateLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("contract_finish_date < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractFinishDateLessThanOrEqualTo(LocalDate value) {
            addCriterion("contract_finish_date <=", value, "contractFinishDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andContractFinishDateLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("contract_finish_date <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractFinishDateIn(List<LocalDate> values) {
            addCriterion("contract_finish_date in", values, "contractFinishDate");
            return (Criteria) this;
        }

        public Criteria andContractFinishDateNotIn(List<LocalDate> values) {
            addCriterion("contract_finish_date not in", values, "contractFinishDate");
            return (Criteria) this;
        }

        public Criteria andContractFinishDateBetween(LocalDate value1, LocalDate value2) {
            addCriterion("contract_finish_date between", value1, value2, "contractFinishDate");
            return (Criteria) this;
        }

        public Criteria andContractFinishDateNotBetween(LocalDate value1, LocalDate value2) {
            addCriterion("contract_finish_date not between", value1, value2, "contractFinishDate");
            return (Criteria) this;
        }

        public Criteria andNoteIsNull() {
            addCriterion("note is null");
            return (Criteria) this;
        }

        public Criteria andNoteIsNotNull() {
            addCriterion("note is not null");
            return (Criteria) this;
        }

        public Criteria andNoteEqualTo(String value) {
            addCriterion("note =", value, "note");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andNoteEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("note = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNoteNotEqualTo(String value) {
            addCriterion("note <>", value, "note");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andNoteNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("note <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNoteGreaterThan(String value) {
            addCriterion("note >", value, "note");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andNoteGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("note > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNoteGreaterThanOrEqualTo(String value) {
            addCriterion("note >=", value, "note");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andNoteGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("note >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNoteLessThan(String value) {
            addCriterion("note <", value, "note");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andNoteLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("note < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNoteLessThanOrEqualTo(String value) {
            addCriterion("note <=", value, "note");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andNoteLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("note <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNoteLike(String value) {
            addCriterion("note like", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteNotLike(String value) {
            addCriterion("note not like", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteIn(List<String> values) {
            addCriterion("note in", values, "note");
            return (Criteria) this;
        }

        public Criteria andNoteNotIn(List<String> values) {
            addCriterion("note not in", values, "note");
            return (Criteria) this;
        }

        public Criteria andNoteBetween(String value1, String value2) {
            addCriterion("note between", value1, value2, "note");
            return (Criteria) this;
        }

        public Criteria andNoteNotBetween(String value1, String value2) {
            addCriterion("note not between", value1, value2, "note");
            return (Criteria) this;
        }

        public Criteria andCreateByIsNull() {
            addCriterion("create_by is null");
            return (Criteria) this;
        }

        public Criteria andCreateByIsNotNull() {
            addCriterion("create_by is not null");
            return (Criteria) this;
        }

        public Criteria andCreateByEqualTo(String value) {
            addCriterion("create_by =", value, "createBy");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andCreateByEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("create_by = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateByNotEqualTo(String value) {
            addCriterion("create_by <>", value, "createBy");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andCreateByNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("create_by <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateByGreaterThan(String value) {
            addCriterion("create_by >", value, "createBy");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andCreateByGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("create_by > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateByGreaterThanOrEqualTo(String value) {
            addCriterion("create_by >=", value, "createBy");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andCreateByGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("create_by >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateByLessThan(String value) {
            addCriterion("create_by <", value, "createBy");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andCreateByLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("create_by < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateByLessThanOrEqualTo(String value) {
            addCriterion("create_by <=", value, "createBy");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andCreateByLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("create_by <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateByLike(String value) {
            addCriterion("create_by like", value, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByNotLike(String value) {
            addCriterion("create_by not like", value, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByIn(List<String> values) {
            addCriterion("create_by in", values, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByNotIn(List<String> values) {
            addCriterion("create_by not in", values, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByBetween(String value1, String value2) {
            addCriterion("create_by between", value1, value2, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByNotBetween(String value1, String value2) {
            addCriterion("create_by not between", value1, value2, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(LocalDateTime value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("create_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(LocalDateTime value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("create_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(LocalDateTime value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("create_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("create_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(LocalDateTime value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("create_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("create_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<LocalDateTime> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<LocalDateTime> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andUpdateByIsNull() {
            addCriterion("update_by is null");
            return (Criteria) this;
        }

        public Criteria andUpdateByIsNotNull() {
            addCriterion("update_by is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateByEqualTo(String value) {
            addCriterion("update_by =", value, "updateBy");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andUpdateByEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("update_by = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateByNotEqualTo(String value) {
            addCriterion("update_by <>", value, "updateBy");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andUpdateByNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("update_by <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateByGreaterThan(String value) {
            addCriterion("update_by >", value, "updateBy");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andUpdateByGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("update_by > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateByGreaterThanOrEqualTo(String value) {
            addCriterion("update_by >=", value, "updateBy");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andUpdateByGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("update_by >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateByLessThan(String value) {
            addCriterion("update_by <", value, "updateBy");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andUpdateByLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("update_by < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateByLessThanOrEqualTo(String value) {
            addCriterion("update_by <=", value, "updateBy");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andUpdateByLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("update_by <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateByLike(String value) {
            addCriterion("update_by like", value, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByNotLike(String value) {
            addCriterion("update_by not like", value, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByIn(List<String> values) {
            addCriterion("update_by in", values, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByNotIn(List<String> values) {
            addCriterion("update_by not in", values, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByBetween(String value1, String value2) {
            addCriterion("update_by between", value1, value2, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByNotBetween(String value1, String value2) {
            addCriterion("update_by not between", value1, value2, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("update_time is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("update_time is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(LocalDateTime value) {
            addCriterion("update_time =", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("update_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(LocalDateTime value) {
            addCriterion("update_time <>", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("update_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(LocalDateTime value) {
            addCriterion("update_time >", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("update_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("update_time >=", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("update_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(LocalDateTime value) {
            addCriterion("update_time <", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("update_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("update_time <=", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("update_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<LocalDateTime> values) {
            addCriterion("update_time in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<LocalDateTime> values) {
            addCriterion("update_time not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("update_time between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("update_time not between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNull() {
            addCriterion("deleted is null");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNotNull() {
            addCriterion("deleted is not null");
            return (Criteria) this;
        }

        public Criteria andDeletedEqualTo(Boolean value) {
            addCriterion("deleted =", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andDeletedEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("deleted = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedNotEqualTo(Boolean value) {
            addCriterion("deleted <>", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andDeletedNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("deleted <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThan(Boolean value) {
            addCriterion("deleted >", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andDeletedGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("deleted > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThanOrEqualTo(Boolean value) {
            addCriterion("deleted >=", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andDeletedGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("deleted >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedLessThan(Boolean value) {
            addCriterion("deleted <", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andDeletedLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("deleted < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedLessThanOrEqualTo(Boolean value) {
            addCriterion("deleted <=", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andDeletedLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("deleted <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedIn(List<Boolean> values) {
            addCriterion("deleted in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotIn(List<Boolean> values) {
            addCriterion("deleted not in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedBetween(Boolean value1, Boolean value2) {
            addCriterion("deleted between", value1, value2, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotBetween(Boolean value1, Boolean value2) {
            addCriterion("deleted not between", value1, value2, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeleteByIsNull() {
            addCriterion("delete_by is null");
            return (Criteria) this;
        }

        public Criteria andDeleteByIsNotNull() {
            addCriterion("delete_by is not null");
            return (Criteria) this;
        }

        public Criteria andDeleteByEqualTo(String value) {
            addCriterion("delete_by =", value, "deleteBy");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andDeleteByEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("delete_by = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeleteByNotEqualTo(String value) {
            addCriterion("delete_by <>", value, "deleteBy");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andDeleteByNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("delete_by <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeleteByGreaterThan(String value) {
            addCriterion("delete_by >", value, "deleteBy");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andDeleteByGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("delete_by > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeleteByGreaterThanOrEqualTo(String value) {
            addCriterion("delete_by >=", value, "deleteBy");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andDeleteByGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("delete_by >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeleteByLessThan(String value) {
            addCriterion("delete_by <", value, "deleteBy");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andDeleteByLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("delete_by < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeleteByLessThanOrEqualTo(String value) {
            addCriterion("delete_by <=", value, "deleteBy");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andDeleteByLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("delete_by <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeleteByLike(String value) {
            addCriterion("delete_by like", value, "deleteBy");
            return (Criteria) this;
        }

        public Criteria andDeleteByNotLike(String value) {
            addCriterion("delete_by not like", value, "deleteBy");
            return (Criteria) this;
        }

        public Criteria andDeleteByIn(List<String> values) {
            addCriterion("delete_by in", values, "deleteBy");
            return (Criteria) this;
        }

        public Criteria andDeleteByNotIn(List<String> values) {
            addCriterion("delete_by not in", values, "deleteBy");
            return (Criteria) this;
        }

        public Criteria andDeleteByBetween(String value1, String value2) {
            addCriterion("delete_by between", value1, value2, "deleteBy");
            return (Criteria) this;
        }

        public Criteria andDeleteByNotBetween(String value1, String value2) {
            addCriterion("delete_by not between", value1, value2, "deleteBy");
            return (Criteria) this;
        }

        public Criteria andDeleteTimeIsNull() {
            addCriterion("delete_time is null");
            return (Criteria) this;
        }

        public Criteria andDeleteTimeIsNotNull() {
            addCriterion("delete_time is not null");
            return (Criteria) this;
        }

        public Criteria andDeleteTimeEqualTo(LocalDateTime value) {
            addCriterion("delete_time =", value, "deleteTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andDeleteTimeEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("delete_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeleteTimeNotEqualTo(LocalDateTime value) {
            addCriterion("delete_time <>", value, "deleteTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andDeleteTimeNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("delete_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeleteTimeGreaterThan(LocalDateTime value) {
            addCriterion("delete_time >", value, "deleteTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andDeleteTimeGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("delete_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeleteTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("delete_time >=", value, "deleteTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andDeleteTimeGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("delete_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeleteTimeLessThan(LocalDateTime value) {
            addCriterion("delete_time <", value, "deleteTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andDeleteTimeLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("delete_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeleteTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("delete_time <=", value, "deleteTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andDeleteTimeLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("delete_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeleteTimeIn(List<LocalDateTime> values) {
            addCriterion("delete_time in", values, "deleteTime");
            return (Criteria) this;
        }

        public Criteria andDeleteTimeNotIn(List<LocalDateTime> values) {
            addCriterion("delete_time not in", values, "deleteTime");
            return (Criteria) this;
        }

        public Criteria andDeleteTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("delete_time between", value1, value2, "deleteTime");
            return (Criteria) this;
        }

        public Criteria andDeleteTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("delete_time not between", value1, value2, "deleteTime");
            return (Criteria) this;
        }

        public Criteria andVersionIsNull() {
            addCriterion("version is null");
            return (Criteria) this;
        }

        public Criteria andVersionIsNotNull() {
            addCriterion("version is not null");
            return (Criteria) this;
        }

        public Criteria andVersionEqualTo(Integer value) {
            addCriterion("version =", value, "version");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andVersionEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("version = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVersionNotEqualTo(Integer value) {
            addCriterion("version <>", value, "version");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andVersionNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("version <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVersionGreaterThan(Integer value) {
            addCriterion("version >", value, "version");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andVersionGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("version > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVersionGreaterThanOrEqualTo(Integer value) {
            addCriterion("version >=", value, "version");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andVersionGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("version >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVersionLessThan(Integer value) {
            addCriterion("version <", value, "version");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andVersionLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("version < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVersionLessThanOrEqualTo(Integer value) {
            addCriterion("version <=", value, "version");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andVersionLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("version <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVersionIn(List<Integer> values) {
            addCriterion("version in", values, "version");
            return (Criteria) this;
        }

        public Criteria andVersionNotIn(List<Integer> values) {
            addCriterion("version not in", values, "version");
            return (Criteria) this;
        }

        public Criteria andVersionBetween(Integer value1, Integer value2) {
            addCriterion("version between", value1, value2, "version");
            return (Criteria) this;
        }

        public Criteria andVersionNotBetween(Integer value1, Integer value2) {
            addCriterion("version not between", value1, value2, "version");
            return (Criteria) this;
        }

        public Criteria andTenantIdIsNull() {
            addCriterion("tenant_id is null");
            return (Criteria) this;
        }

        public Criteria andTenantIdIsNotNull() {
            addCriterion("tenant_id is not null");
            return (Criteria) this;
        }

        public Criteria andTenantIdEqualTo(String value) {
            addCriterion("tenant_id =", value, "tenantId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andTenantIdEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("tenant_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTenantIdNotEqualTo(String value) {
            addCriterion("tenant_id <>", value, "tenantId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andTenantIdNotEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("tenant_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTenantIdGreaterThan(String value) {
            addCriterion("tenant_id >", value, "tenantId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andTenantIdGreaterThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("tenant_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTenantIdGreaterThanOrEqualTo(String value) {
            addCriterion("tenant_id >=", value, "tenantId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andTenantIdGreaterThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("tenant_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTenantIdLessThan(String value) {
            addCriterion("tenant_id <", value, "tenantId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andTenantIdLessThanColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("tenant_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTenantIdLessThanOrEqualTo(String value) {
            addCriterion("tenant_id <=", value, "tenantId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andTenantIdLessThanOrEqualToColumn(HrPerson.Column column) {
            addCriterion(new StringBuilder("tenant_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTenantIdLike(String value) {
            addCriterion("tenant_id like", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdNotLike(String value) {
            addCriterion("tenant_id not like", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdIn(List<String> values) {
            addCriterion("tenant_id in", values, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdNotIn(List<String> values) {
            addCriterion("tenant_id not in", values, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdBetween(String value1, String value2) {
            addCriterion("tenant_id between", value1, value2, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdNotBetween(String value1, String value2) {
            addCriterion("tenant_id not between", value1, value2, "tenantId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table hr_person
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        private HrPersonExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        protected Criteria(HrPersonExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public HrPersonExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        public Criteria andLogicalDeleted(boolean deleted) {
            return deleted ? andDeletedEqualTo(HrPerson.Deleted.IS_DELETED.value()) : andDeletedNotEqualTo(HrPerson.Deleted.IS_DELETED.value());
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table hr_person
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table hr_person
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person
         *
         * @mbg.generated
         */
        void example(com.ep.db.domain.HrPersonExample example);
    }
}