package com.ep.db.domain;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class HrPersonContractExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table hr_person_contract
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table hr_person_contract
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table hr_person_contract
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hr_person_contract
     *
     * @mbg.generated
     */
    public HrPersonContractExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hr_person_contract
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hr_person_contract
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hr_person_contract
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hr_person_contract
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hr_person_contract
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hr_person_contract
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hr_person_contract
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hr_person_contract
     *
     * @mbg.generated
     */
    public HrPersonContractExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hr_person_contract
     *
     * @mbg.generated
     */
    public HrPersonContractExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hr_person_contract
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hr_person_contract
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hr_person_contract
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hr_person_contract
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        HrPersonContractExample example = new HrPersonContractExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hr_person_contract
     *
     * @mbg.generated
     */
    public HrPersonContractExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table hr_person_contract
     *
     * @mbg.generated
     */
    public HrPersonContractExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table hr_person_contract
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("id like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("id not like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<String> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<String> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andPersonIdIsNull() {
            addCriterion("person_id is null");
            return (Criteria) this;
        }

        public Criteria andPersonIdIsNotNull() {
            addCriterion("person_id is not null");
            return (Criteria) this;
        }

        public Criteria andPersonIdEqualTo(String value) {
            addCriterion("person_id =", value, "personId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andPersonIdEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("person_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPersonIdNotEqualTo(String value) {
            addCriterion("person_id <>", value, "personId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andPersonIdNotEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("person_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPersonIdGreaterThan(String value) {
            addCriterion("person_id >", value, "personId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andPersonIdGreaterThanColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("person_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPersonIdGreaterThanOrEqualTo(String value) {
            addCriterion("person_id >=", value, "personId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andPersonIdGreaterThanOrEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("person_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPersonIdLessThan(String value) {
            addCriterion("person_id <", value, "personId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andPersonIdLessThanColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("person_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPersonIdLessThanOrEqualTo(String value) {
            addCriterion("person_id <=", value, "personId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andPersonIdLessThanOrEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("person_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPersonIdLike(String value) {
            addCriterion("person_id like", value, "personId");
            return (Criteria) this;
        }

        public Criteria andPersonIdNotLike(String value) {
            addCriterion("person_id not like", value, "personId");
            return (Criteria) this;
        }

        public Criteria andPersonIdIn(List<String> values) {
            addCriterion("person_id in", values, "personId");
            return (Criteria) this;
        }

        public Criteria andPersonIdNotIn(List<String> values) {
            addCriterion("person_id not in", values, "personId");
            return (Criteria) this;
        }

        public Criteria andPersonIdBetween(String value1, String value2) {
            addCriterion("person_id between", value1, value2, "personId");
            return (Criteria) this;
        }

        public Criteria andPersonIdNotBetween(String value1, String value2) {
            addCriterion("person_id not between", value1, value2, "personId");
            return (Criteria) this;
        }

        public Criteria andBusinessCodeIsNull() {
            addCriterion("business_code is null");
            return (Criteria) this;
        }

        public Criteria andBusinessCodeIsNotNull() {
            addCriterion("business_code is not null");
            return (Criteria) this;
        }

        public Criteria andBusinessCodeEqualTo(String value) {
            addCriterion("business_code =", value, "businessCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andBusinessCodeEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("business_code = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBusinessCodeNotEqualTo(String value) {
            addCriterion("business_code <>", value, "businessCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andBusinessCodeNotEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("business_code <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBusinessCodeGreaterThan(String value) {
            addCriterion("business_code >", value, "businessCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andBusinessCodeGreaterThanColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("business_code > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBusinessCodeGreaterThanOrEqualTo(String value) {
            addCriterion("business_code >=", value, "businessCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andBusinessCodeGreaterThanOrEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("business_code >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBusinessCodeLessThan(String value) {
            addCriterion("business_code <", value, "businessCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andBusinessCodeLessThanColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("business_code < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBusinessCodeLessThanOrEqualTo(String value) {
            addCriterion("business_code <=", value, "businessCode");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andBusinessCodeLessThanOrEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("business_code <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBusinessCodeLike(String value) {
            addCriterion("business_code like", value, "businessCode");
            return (Criteria) this;
        }

        public Criteria andBusinessCodeNotLike(String value) {
            addCriterion("business_code not like", value, "businessCode");
            return (Criteria) this;
        }

        public Criteria andBusinessCodeIn(List<String> values) {
            addCriterion("business_code in", values, "businessCode");
            return (Criteria) this;
        }

        public Criteria andBusinessCodeNotIn(List<String> values) {
            addCriterion("business_code not in", values, "businessCode");
            return (Criteria) this;
        }

        public Criteria andBusinessCodeBetween(String value1, String value2) {
            addCriterion("business_code between", value1, value2, "businessCode");
            return (Criteria) this;
        }

        public Criteria andBusinessCodeNotBetween(String value1, String value2) {
            addCriterion("business_code not between", value1, value2, "businessCode");
            return (Criteria) this;
        }

        public Criteria andTypeIsNull() {
            addCriterion("`type` is null");
            return (Criteria) this;
        }

        public Criteria andTypeIsNotNull() {
            addCriterion("`type` is not null");
            return (Criteria) this;
        }

        public Criteria andTypeEqualTo(String value) {
            addCriterion("`type` =", value, "type");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andTypeEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("`type` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTypeNotEqualTo(String value) {
            addCriterion("`type` <>", value, "type");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andTypeNotEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("`type` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThan(String value) {
            addCriterion("`type` >", value, "type");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andTypeGreaterThanColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("`type` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThanOrEqualTo(String value) {
            addCriterion("`type` >=", value, "type");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andTypeGreaterThanOrEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("`type` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTypeLessThan(String value) {
            addCriterion("`type` <", value, "type");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andTypeLessThanColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("`type` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTypeLessThanOrEqualTo(String value) {
            addCriterion("`type` <=", value, "type");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andTypeLessThanOrEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("`type` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTypeLike(String value) {
            addCriterion("`type` like", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotLike(String value) {
            addCriterion("`type` not like", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeIn(List<String> values) {
            addCriterion("`type` in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotIn(List<String> values) {
            addCriterion("`type` not in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeBetween(String value1, String value2) {
            addCriterion("`type` between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotBetween(String value1, String value2) {
            addCriterion("`type` not between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("`status` is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("`status` is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(String value) {
            addCriterion("`status` =", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andStatusEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("`status` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(String value) {
            addCriterion("`status` <>", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andStatusNotEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("`status` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(String value) {
            addCriterion("`status` >", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andStatusGreaterThanColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("`status` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(String value) {
            addCriterion("`status` >=", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andStatusGreaterThanOrEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("`status` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(String value) {
            addCriterion("`status` <", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andStatusLessThanColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("`status` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(String value) {
            addCriterion("`status` <=", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andStatusLessThanOrEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("`status` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusLike(String value) {
            addCriterion("`status` like", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotLike(String value) {
            addCriterion("`status` not like", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<String> values) {
            addCriterion("`status` in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<String> values) {
            addCriterion("`status` not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(String value1, String value2) {
            addCriterion("`status` between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(String value1, String value2) {
            addCriterion("`status` not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andContractDurationIsNull() {
            addCriterion("contract_duration is null");
            return (Criteria) this;
        }

        public Criteria andContractDurationIsNotNull() {
            addCriterion("contract_duration is not null");
            return (Criteria) this;
        }

        public Criteria andContractDurationEqualTo(BigDecimal value) {
            addCriterion("contract_duration =", value, "contractDuration");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andContractDurationEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("contract_duration = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractDurationNotEqualTo(BigDecimal value) {
            addCriterion("contract_duration <>", value, "contractDuration");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andContractDurationNotEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("contract_duration <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractDurationGreaterThan(BigDecimal value) {
            addCriterion("contract_duration >", value, "contractDuration");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andContractDurationGreaterThanColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("contract_duration > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractDurationGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("contract_duration >=", value, "contractDuration");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andContractDurationGreaterThanOrEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("contract_duration >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractDurationLessThan(BigDecimal value) {
            addCriterion("contract_duration <", value, "contractDuration");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andContractDurationLessThanColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("contract_duration < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractDurationLessThanOrEqualTo(BigDecimal value) {
            addCriterion("contract_duration <=", value, "contractDuration");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andContractDurationLessThanOrEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("contract_duration <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractDurationIn(List<BigDecimal> values) {
            addCriterion("contract_duration in", values, "contractDuration");
            return (Criteria) this;
        }

        public Criteria andContractDurationNotIn(List<BigDecimal> values) {
            addCriterion("contract_duration not in", values, "contractDuration");
            return (Criteria) this;
        }

        public Criteria andContractDurationBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("contract_duration between", value1, value2, "contractDuration");
            return (Criteria) this;
        }

        public Criteria andContractDurationNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("contract_duration not between", value1, value2, "contractDuration");
            return (Criteria) this;
        }

        public Criteria andContractYearIsNull() {
            addCriterion("contract_year is null");
            return (Criteria) this;
        }

        public Criteria andContractYearIsNotNull() {
            addCriterion("contract_year is not null");
            return (Criteria) this;
        }

        public Criteria andContractYearEqualTo(String value) {
            addCriterion("contract_year =", value, "contractYear");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andContractYearEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("contract_year = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractYearNotEqualTo(String value) {
            addCriterion("contract_year <>", value, "contractYear");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andContractYearNotEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("contract_year <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractYearGreaterThan(String value) {
            addCriterion("contract_year >", value, "contractYear");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andContractYearGreaterThanColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("contract_year > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractYearGreaterThanOrEqualTo(String value) {
            addCriterion("contract_year >=", value, "contractYear");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andContractYearGreaterThanOrEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("contract_year >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractYearLessThan(String value) {
            addCriterion("contract_year <", value, "contractYear");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andContractYearLessThanColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("contract_year < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractYearLessThanOrEqualTo(String value) {
            addCriterion("contract_year <=", value, "contractYear");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andContractYearLessThanOrEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("contract_year <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractYearLike(String value) {
            addCriterion("contract_year like", value, "contractYear");
            return (Criteria) this;
        }

        public Criteria andContractYearNotLike(String value) {
            addCriterion("contract_year not like", value, "contractYear");
            return (Criteria) this;
        }

        public Criteria andContractYearIn(List<String> values) {
            addCriterion("contract_year in", values, "contractYear");
            return (Criteria) this;
        }

        public Criteria andContractYearNotIn(List<String> values) {
            addCriterion("contract_year not in", values, "contractYear");
            return (Criteria) this;
        }

        public Criteria andContractYearBetween(String value1, String value2) {
            addCriterion("contract_year between", value1, value2, "contractYear");
            return (Criteria) this;
        }

        public Criteria andContractYearNotBetween(String value1, String value2) {
            addCriterion("contract_year not between", value1, value2, "contractYear");
            return (Criteria) this;
        }

        public Criteria andTransferToRegularIsNull() {
            addCriterion("transfer_to_regular is null");
            return (Criteria) this;
        }

        public Criteria andTransferToRegularIsNotNull() {
            addCriterion("transfer_to_regular is not null");
            return (Criteria) this;
        }

        public Criteria andTransferToRegularEqualTo(String value) {
            addCriterion("transfer_to_regular =", value, "transferToRegular");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andTransferToRegularEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("transfer_to_regular = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTransferToRegularNotEqualTo(String value) {
            addCriterion("transfer_to_regular <>", value, "transferToRegular");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andTransferToRegularNotEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("transfer_to_regular <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTransferToRegularGreaterThan(String value) {
            addCriterion("transfer_to_regular >", value, "transferToRegular");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andTransferToRegularGreaterThanColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("transfer_to_regular > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTransferToRegularGreaterThanOrEqualTo(String value) {
            addCriterion("transfer_to_regular >=", value, "transferToRegular");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andTransferToRegularGreaterThanOrEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("transfer_to_regular >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTransferToRegularLessThan(String value) {
            addCriterion("transfer_to_regular <", value, "transferToRegular");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andTransferToRegularLessThanColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("transfer_to_regular < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTransferToRegularLessThanOrEqualTo(String value) {
            addCriterion("transfer_to_regular <=", value, "transferToRegular");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andTransferToRegularLessThanOrEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("transfer_to_regular <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTransferToRegularLike(String value) {
            addCriterion("transfer_to_regular like", value, "transferToRegular");
            return (Criteria) this;
        }

        public Criteria andTransferToRegularNotLike(String value) {
            addCriterion("transfer_to_regular not like", value, "transferToRegular");
            return (Criteria) this;
        }

        public Criteria andTransferToRegularIn(List<String> values) {
            addCriterion("transfer_to_regular in", values, "transferToRegular");
            return (Criteria) this;
        }

        public Criteria andTransferToRegularNotIn(List<String> values) {
            addCriterion("transfer_to_regular not in", values, "transferToRegular");
            return (Criteria) this;
        }

        public Criteria andTransferToRegularBetween(String value1, String value2) {
            addCriterion("transfer_to_regular between", value1, value2, "transferToRegular");
            return (Criteria) this;
        }

        public Criteria andTransferToRegularNotBetween(String value1, String value2) {
            addCriterion("transfer_to_regular not between", value1, value2, "transferToRegular");
            return (Criteria) this;
        }

        public Criteria andContractPartyIdIsNull() {
            addCriterion("contract_party_id is null");
            return (Criteria) this;
        }

        public Criteria andContractPartyIdIsNotNull() {
            addCriterion("contract_party_id is not null");
            return (Criteria) this;
        }

        public Criteria andContractPartyIdEqualTo(String value) {
            addCriterion("contract_party_id =", value, "contractPartyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andContractPartyIdEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("contract_party_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractPartyIdNotEqualTo(String value) {
            addCriterion("contract_party_id <>", value, "contractPartyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andContractPartyIdNotEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("contract_party_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractPartyIdGreaterThan(String value) {
            addCriterion("contract_party_id >", value, "contractPartyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andContractPartyIdGreaterThanColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("contract_party_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractPartyIdGreaterThanOrEqualTo(String value) {
            addCriterion("contract_party_id >=", value, "contractPartyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andContractPartyIdGreaterThanOrEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("contract_party_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractPartyIdLessThan(String value) {
            addCriterion("contract_party_id <", value, "contractPartyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andContractPartyIdLessThanColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("contract_party_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractPartyIdLessThanOrEqualTo(String value) {
            addCriterion("contract_party_id <=", value, "contractPartyId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andContractPartyIdLessThanOrEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("contract_party_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractPartyIdLike(String value) {
            addCriterion("contract_party_id like", value, "contractPartyId");
            return (Criteria) this;
        }

        public Criteria andContractPartyIdNotLike(String value) {
            addCriterion("contract_party_id not like", value, "contractPartyId");
            return (Criteria) this;
        }

        public Criteria andContractPartyIdIn(List<String> values) {
            addCriterion("contract_party_id in", values, "contractPartyId");
            return (Criteria) this;
        }

        public Criteria andContractPartyIdNotIn(List<String> values) {
            addCriterion("contract_party_id not in", values, "contractPartyId");
            return (Criteria) this;
        }

        public Criteria andContractPartyIdBetween(String value1, String value2) {
            addCriterion("contract_party_id between", value1, value2, "contractPartyId");
            return (Criteria) this;
        }

        public Criteria andContractPartyIdNotBetween(String value1, String value2) {
            addCriterion("contract_party_id not between", value1, value2, "contractPartyId");
            return (Criteria) this;
        }

        public Criteria andProbationSalaryIsNull() {
            addCriterion("probation_salary is null");
            return (Criteria) this;
        }

        public Criteria andProbationSalaryIsNotNull() {
            addCriterion("probation_salary is not null");
            return (Criteria) this;
        }

        public Criteria andProbationSalaryEqualTo(BigDecimal value) {
            addCriterion("probation_salary =", value, "probationSalary");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andProbationSalaryEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("probation_salary = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProbationSalaryNotEqualTo(BigDecimal value) {
            addCriterion("probation_salary <>", value, "probationSalary");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andProbationSalaryNotEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("probation_salary <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProbationSalaryGreaterThan(BigDecimal value) {
            addCriterion("probation_salary >", value, "probationSalary");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andProbationSalaryGreaterThanColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("probation_salary > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProbationSalaryGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("probation_salary >=", value, "probationSalary");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andProbationSalaryGreaterThanOrEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("probation_salary >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProbationSalaryLessThan(BigDecimal value) {
            addCriterion("probation_salary <", value, "probationSalary");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andProbationSalaryLessThanColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("probation_salary < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProbationSalaryLessThanOrEqualTo(BigDecimal value) {
            addCriterion("probation_salary <=", value, "probationSalary");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andProbationSalaryLessThanOrEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("probation_salary <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProbationSalaryIn(List<BigDecimal> values) {
            addCriterion("probation_salary in", values, "probationSalary");
            return (Criteria) this;
        }

        public Criteria andProbationSalaryNotIn(List<BigDecimal> values) {
            addCriterion("probation_salary not in", values, "probationSalary");
            return (Criteria) this;
        }

        public Criteria andProbationSalaryBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("probation_salary between", value1, value2, "probationSalary");
            return (Criteria) this;
        }

        public Criteria andProbationSalaryNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("probation_salary not between", value1, value2, "probationSalary");
            return (Criteria) this;
        }

        public Criteria andProbationStartDateIsNull() {
            addCriterion("probation_start_date is null");
            return (Criteria) this;
        }

        public Criteria andProbationStartDateIsNotNull() {
            addCriterion("probation_start_date is not null");
            return (Criteria) this;
        }

        public Criteria andProbationStartDateEqualTo(LocalDate value) {
            addCriterion("probation_start_date =", value, "probationStartDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andProbationStartDateEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("probation_start_date = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProbationStartDateNotEqualTo(LocalDate value) {
            addCriterion("probation_start_date <>", value, "probationStartDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andProbationStartDateNotEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("probation_start_date <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProbationStartDateGreaterThan(LocalDate value) {
            addCriterion("probation_start_date >", value, "probationStartDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andProbationStartDateGreaterThanColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("probation_start_date > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProbationStartDateGreaterThanOrEqualTo(LocalDate value) {
            addCriterion("probation_start_date >=", value, "probationStartDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andProbationStartDateGreaterThanOrEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("probation_start_date >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProbationStartDateLessThan(LocalDate value) {
            addCriterion("probation_start_date <", value, "probationStartDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andProbationStartDateLessThanColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("probation_start_date < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProbationStartDateLessThanOrEqualTo(LocalDate value) {
            addCriterion("probation_start_date <=", value, "probationStartDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andProbationStartDateLessThanOrEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("probation_start_date <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProbationStartDateIn(List<LocalDate> values) {
            addCriterion("probation_start_date in", values, "probationStartDate");
            return (Criteria) this;
        }

        public Criteria andProbationStartDateNotIn(List<LocalDate> values) {
            addCriterion("probation_start_date not in", values, "probationStartDate");
            return (Criteria) this;
        }

        public Criteria andProbationStartDateBetween(LocalDate value1, LocalDate value2) {
            addCriterion("probation_start_date between", value1, value2, "probationStartDate");
            return (Criteria) this;
        }

        public Criteria andProbationStartDateNotBetween(LocalDate value1, LocalDate value2) {
            addCriterion("probation_start_date not between", value1, value2, "probationStartDate");
            return (Criteria) this;
        }

        public Criteria andProbationFinishDateIsNull() {
            addCriterion("probation_finish_date is null");
            return (Criteria) this;
        }

        public Criteria andProbationFinishDateIsNotNull() {
            addCriterion("probation_finish_date is not null");
            return (Criteria) this;
        }

        public Criteria andProbationFinishDateEqualTo(LocalDate value) {
            addCriterion("probation_finish_date =", value, "probationFinishDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andProbationFinishDateEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("probation_finish_date = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProbationFinishDateNotEqualTo(LocalDate value) {
            addCriterion("probation_finish_date <>", value, "probationFinishDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andProbationFinishDateNotEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("probation_finish_date <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProbationFinishDateGreaterThan(LocalDate value) {
            addCriterion("probation_finish_date >", value, "probationFinishDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andProbationFinishDateGreaterThanColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("probation_finish_date > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProbationFinishDateGreaterThanOrEqualTo(LocalDate value) {
            addCriterion("probation_finish_date >=", value, "probationFinishDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andProbationFinishDateGreaterThanOrEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("probation_finish_date >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProbationFinishDateLessThan(LocalDate value) {
            addCriterion("probation_finish_date <", value, "probationFinishDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andProbationFinishDateLessThanColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("probation_finish_date < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProbationFinishDateLessThanOrEqualTo(LocalDate value) {
            addCriterion("probation_finish_date <=", value, "probationFinishDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andProbationFinishDateLessThanOrEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("probation_finish_date <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProbationFinishDateIn(List<LocalDate> values) {
            addCriterion("probation_finish_date in", values, "probationFinishDate");
            return (Criteria) this;
        }

        public Criteria andProbationFinishDateNotIn(List<LocalDate> values) {
            addCriterion("probation_finish_date not in", values, "probationFinishDate");
            return (Criteria) this;
        }

        public Criteria andProbationFinishDateBetween(LocalDate value1, LocalDate value2) {
            addCriterion("probation_finish_date between", value1, value2, "probationFinishDate");
            return (Criteria) this;
        }

        public Criteria andProbationFinishDateNotBetween(LocalDate value1, LocalDate value2) {
            addCriterion("probation_finish_date not between", value1, value2, "probationFinishDate");
            return (Criteria) this;
        }

        public Criteria andContractStartDateIsNull() {
            addCriterion("contract_start_date is null");
            return (Criteria) this;
        }

        public Criteria andContractStartDateIsNotNull() {
            addCriterion("contract_start_date is not null");
            return (Criteria) this;
        }

        public Criteria andContractStartDateEqualTo(LocalDate value) {
            addCriterion("contract_start_date =", value, "contractStartDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andContractStartDateEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("contract_start_date = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractStartDateNotEqualTo(LocalDate value) {
            addCriterion("contract_start_date <>", value, "contractStartDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andContractStartDateNotEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("contract_start_date <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractStartDateGreaterThan(LocalDate value) {
            addCriterion("contract_start_date >", value, "contractStartDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andContractStartDateGreaterThanColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("contract_start_date > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractStartDateGreaterThanOrEqualTo(LocalDate value) {
            addCriterion("contract_start_date >=", value, "contractStartDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andContractStartDateGreaterThanOrEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("contract_start_date >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractStartDateLessThan(LocalDate value) {
            addCriterion("contract_start_date <", value, "contractStartDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andContractStartDateLessThanColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("contract_start_date < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractStartDateLessThanOrEqualTo(LocalDate value) {
            addCriterion("contract_start_date <=", value, "contractStartDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andContractStartDateLessThanOrEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("contract_start_date <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractStartDateIn(List<LocalDate> values) {
            addCriterion("contract_start_date in", values, "contractStartDate");
            return (Criteria) this;
        }

        public Criteria andContractStartDateNotIn(List<LocalDate> values) {
            addCriterion("contract_start_date not in", values, "contractStartDate");
            return (Criteria) this;
        }

        public Criteria andContractStartDateBetween(LocalDate value1, LocalDate value2) {
            addCriterion("contract_start_date between", value1, value2, "contractStartDate");
            return (Criteria) this;
        }

        public Criteria andContractStartDateNotBetween(LocalDate value1, LocalDate value2) {
            addCriterion("contract_start_date not between", value1, value2, "contractStartDate");
            return (Criteria) this;
        }

        public Criteria andContractFinishDateIsNull() {
            addCriterion("contract_finish_date is null");
            return (Criteria) this;
        }

        public Criteria andContractFinishDateIsNotNull() {
            addCriterion("contract_finish_date is not null");
            return (Criteria) this;
        }

        public Criteria andContractFinishDateEqualTo(LocalDate value) {
            addCriterion("contract_finish_date =", value, "contractFinishDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andContractFinishDateEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("contract_finish_date = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractFinishDateNotEqualTo(LocalDate value) {
            addCriterion("contract_finish_date <>", value, "contractFinishDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andContractFinishDateNotEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("contract_finish_date <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractFinishDateGreaterThan(LocalDate value) {
            addCriterion("contract_finish_date >", value, "contractFinishDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andContractFinishDateGreaterThanColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("contract_finish_date > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractFinishDateGreaterThanOrEqualTo(LocalDate value) {
            addCriterion("contract_finish_date >=", value, "contractFinishDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andContractFinishDateGreaterThanOrEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("contract_finish_date >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractFinishDateLessThan(LocalDate value) {
            addCriterion("contract_finish_date <", value, "contractFinishDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andContractFinishDateLessThanColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("contract_finish_date < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractFinishDateLessThanOrEqualTo(LocalDate value) {
            addCriterion("contract_finish_date <=", value, "contractFinishDate");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andContractFinishDateLessThanOrEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("contract_finish_date <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContractFinishDateIn(List<LocalDate> values) {
            addCriterion("contract_finish_date in", values, "contractFinishDate");
            return (Criteria) this;
        }

        public Criteria andContractFinishDateNotIn(List<LocalDate> values) {
            addCriterion("contract_finish_date not in", values, "contractFinishDate");
            return (Criteria) this;
        }

        public Criteria andContractFinishDateBetween(LocalDate value1, LocalDate value2) {
            addCriterion("contract_finish_date between", value1, value2, "contractFinishDate");
            return (Criteria) this;
        }

        public Criteria andContractFinishDateNotBetween(LocalDate value1, LocalDate value2) {
            addCriterion("contract_finish_date not between", value1, value2, "contractFinishDate");
            return (Criteria) this;
        }

        public Criteria andSalaryIsNull() {
            addCriterion("salary is null");
            return (Criteria) this;
        }

        public Criteria andSalaryIsNotNull() {
            addCriterion("salary is not null");
            return (Criteria) this;
        }

        public Criteria andSalaryEqualTo(BigDecimal value) {
            addCriterion("salary =", value, "salary");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andSalaryEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("salary = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSalaryNotEqualTo(BigDecimal value) {
            addCriterion("salary <>", value, "salary");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andSalaryNotEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("salary <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSalaryGreaterThan(BigDecimal value) {
            addCriterion("salary >", value, "salary");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andSalaryGreaterThanColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("salary > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSalaryGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("salary >=", value, "salary");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andSalaryGreaterThanOrEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("salary >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSalaryLessThan(BigDecimal value) {
            addCriterion("salary <", value, "salary");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andSalaryLessThanColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("salary < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSalaryLessThanOrEqualTo(BigDecimal value) {
            addCriterion("salary <=", value, "salary");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andSalaryLessThanOrEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("salary <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSalaryIn(List<BigDecimal> values) {
            addCriterion("salary in", values, "salary");
            return (Criteria) this;
        }

        public Criteria andSalaryNotIn(List<BigDecimal> values) {
            addCriterion("salary not in", values, "salary");
            return (Criteria) this;
        }

        public Criteria andSalaryBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("salary between", value1, value2, "salary");
            return (Criteria) this;
        }

        public Criteria andSalaryNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("salary not between", value1, value2, "salary");
            return (Criteria) this;
        }

        public Criteria andContentIsNull() {
            addCriterion("content is null");
            return (Criteria) this;
        }

        public Criteria andContentIsNotNull() {
            addCriterion("content is not null");
            return (Criteria) this;
        }

        public Criteria andContentEqualTo(String value) {
            addCriterion("content =", value, "content");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andContentEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("content = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContentNotEqualTo(String value) {
            addCriterion("content <>", value, "content");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andContentNotEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("content <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContentGreaterThan(String value) {
            addCriterion("content >", value, "content");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andContentGreaterThanColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("content > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContentGreaterThanOrEqualTo(String value) {
            addCriterion("content >=", value, "content");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andContentGreaterThanOrEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("content >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContentLessThan(String value) {
            addCriterion("content <", value, "content");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andContentLessThanColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("content < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContentLessThanOrEqualTo(String value) {
            addCriterion("content <=", value, "content");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andContentLessThanOrEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("content <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andContentLike(String value) {
            addCriterion("content like", value, "content");
            return (Criteria) this;
        }

        public Criteria andContentNotLike(String value) {
            addCriterion("content not like", value, "content");
            return (Criteria) this;
        }

        public Criteria andContentIn(List<String> values) {
            addCriterion("content in", values, "content");
            return (Criteria) this;
        }

        public Criteria andContentNotIn(List<String> values) {
            addCriterion("content not in", values, "content");
            return (Criteria) this;
        }

        public Criteria andContentBetween(String value1, String value2) {
            addCriterion("content between", value1, value2, "content");
            return (Criteria) this;
        }

        public Criteria andContentNotBetween(String value1, String value2) {
            addCriterion("content not between", value1, value2, "content");
            return (Criteria) this;
        }

        public Criteria andNotesIsNull() {
            addCriterion("notes is null");
            return (Criteria) this;
        }

        public Criteria andNotesIsNotNull() {
            addCriterion("notes is not null");
            return (Criteria) this;
        }

        public Criteria andNotesEqualTo(String value) {
            addCriterion("notes =", value, "notes");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andNotesEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("notes = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNotesNotEqualTo(String value) {
            addCriterion("notes <>", value, "notes");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andNotesNotEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("notes <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNotesGreaterThan(String value) {
            addCriterion("notes >", value, "notes");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andNotesGreaterThanColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("notes > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNotesGreaterThanOrEqualTo(String value) {
            addCriterion("notes >=", value, "notes");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andNotesGreaterThanOrEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("notes >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNotesLessThan(String value) {
            addCriterion("notes <", value, "notes");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andNotesLessThanColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("notes < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNotesLessThanOrEqualTo(String value) {
            addCriterion("notes <=", value, "notes");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andNotesLessThanOrEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("notes <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNotesLike(String value) {
            addCriterion("notes like", value, "notes");
            return (Criteria) this;
        }

        public Criteria andNotesNotLike(String value) {
            addCriterion("notes not like", value, "notes");
            return (Criteria) this;
        }

        public Criteria andNotesIn(List<String> values) {
            addCriterion("notes in", values, "notes");
            return (Criteria) this;
        }

        public Criteria andNotesNotIn(List<String> values) {
            addCriterion("notes not in", values, "notes");
            return (Criteria) this;
        }

        public Criteria andNotesBetween(String value1, String value2) {
            addCriterion("notes between", value1, value2, "notes");
            return (Criteria) this;
        }

        public Criteria andNotesNotBetween(String value1, String value2) {
            addCriterion("notes not between", value1, value2, "notes");
            return (Criteria) this;
        }

        public Criteria andFileIdIsNull() {
            addCriterion("file_id is null");
            return (Criteria) this;
        }

        public Criteria andFileIdIsNotNull() {
            addCriterion("file_id is not null");
            return (Criteria) this;
        }

        public Criteria andFileIdEqualTo(String value) {
            addCriterion("file_id =", value, "fileId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andFileIdEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("file_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFileIdNotEqualTo(String value) {
            addCriterion("file_id <>", value, "fileId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andFileIdNotEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("file_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFileIdGreaterThan(String value) {
            addCriterion("file_id >", value, "fileId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andFileIdGreaterThanColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("file_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFileIdGreaterThanOrEqualTo(String value) {
            addCriterion("file_id >=", value, "fileId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andFileIdGreaterThanOrEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("file_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFileIdLessThan(String value) {
            addCriterion("file_id <", value, "fileId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andFileIdLessThanColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("file_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFileIdLessThanOrEqualTo(String value) {
            addCriterion("file_id <=", value, "fileId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andFileIdLessThanOrEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("file_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFileIdLike(String value) {
            addCriterion("file_id like", value, "fileId");
            return (Criteria) this;
        }

        public Criteria andFileIdNotLike(String value) {
            addCriterion("file_id not like", value, "fileId");
            return (Criteria) this;
        }

        public Criteria andFileIdIn(List<String> values) {
            addCriterion("file_id in", values, "fileId");
            return (Criteria) this;
        }

        public Criteria andFileIdNotIn(List<String> values) {
            addCriterion("file_id not in", values, "fileId");
            return (Criteria) this;
        }

        public Criteria andFileIdBetween(String value1, String value2) {
            addCriterion("file_id between", value1, value2, "fileId");
            return (Criteria) this;
        }

        public Criteria andFileIdNotBetween(String value1, String value2) {
            addCriterion("file_id not between", value1, value2, "fileId");
            return (Criteria) this;
        }

        public Criteria andArchIsNull() {
            addCriterion("arch is null");
            return (Criteria) this;
        }

        public Criteria andArchIsNotNull() {
            addCriterion("arch is not null");
            return (Criteria) this;
        }

        public Criteria andArchEqualTo(String value) {
            addCriterion("arch =", value, "arch");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andArchEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("arch = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andArchNotEqualTo(String value) {
            addCriterion("arch <>", value, "arch");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andArchNotEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("arch <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andArchGreaterThan(String value) {
            addCriterion("arch >", value, "arch");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andArchGreaterThanColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("arch > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andArchGreaterThanOrEqualTo(String value) {
            addCriterion("arch >=", value, "arch");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andArchGreaterThanOrEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("arch >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andArchLessThan(String value) {
            addCriterion("arch <", value, "arch");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andArchLessThanColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("arch < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andArchLessThanOrEqualTo(String value) {
            addCriterion("arch <=", value, "arch");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andArchLessThanOrEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("arch <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andArchLike(String value) {
            addCriterion("arch like", value, "arch");
            return (Criteria) this;
        }

        public Criteria andArchNotLike(String value) {
            addCriterion("arch not like", value, "arch");
            return (Criteria) this;
        }

        public Criteria andArchIn(List<String> values) {
            addCriterion("arch in", values, "arch");
            return (Criteria) this;
        }

        public Criteria andArchNotIn(List<String> values) {
            addCriterion("arch not in", values, "arch");
            return (Criteria) this;
        }

        public Criteria andArchBetween(String value1, String value2) {
            addCriterion("arch between", value1, value2, "arch");
            return (Criteria) this;
        }

        public Criteria andArchNotBetween(String value1, String value2) {
            addCriterion("arch not between", value1, value2, "arch");
            return (Criteria) this;
        }

        public Criteria andCreateByIsNull() {
            addCriterion("create_by is null");
            return (Criteria) this;
        }

        public Criteria andCreateByIsNotNull() {
            addCriterion("create_by is not null");
            return (Criteria) this;
        }

        public Criteria andCreateByEqualTo(String value) {
            addCriterion("create_by =", value, "createBy");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andCreateByEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("create_by = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateByNotEqualTo(String value) {
            addCriterion("create_by <>", value, "createBy");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andCreateByNotEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("create_by <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateByGreaterThan(String value) {
            addCriterion("create_by >", value, "createBy");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andCreateByGreaterThanColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("create_by > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateByGreaterThanOrEqualTo(String value) {
            addCriterion("create_by >=", value, "createBy");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andCreateByGreaterThanOrEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("create_by >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateByLessThan(String value) {
            addCriterion("create_by <", value, "createBy");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andCreateByLessThanColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("create_by < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateByLessThanOrEqualTo(String value) {
            addCriterion("create_by <=", value, "createBy");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andCreateByLessThanOrEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("create_by <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateByLike(String value) {
            addCriterion("create_by like", value, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByNotLike(String value) {
            addCriterion("create_by not like", value, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByIn(List<String> values) {
            addCriterion("create_by in", values, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByNotIn(List<String> values) {
            addCriterion("create_by not in", values, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByBetween(String value1, String value2) {
            addCriterion("create_by between", value1, value2, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByNotBetween(String value1, String value2) {
            addCriterion("create_by not between", value1, value2, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(LocalDateTime value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("create_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(LocalDateTime value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeNotEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("create_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(LocalDateTime value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("create_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanOrEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("create_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(LocalDateTime value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("create_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanOrEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("create_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<LocalDateTime> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<LocalDateTime> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andUpdateByIsNull() {
            addCriterion("update_by is null");
            return (Criteria) this;
        }

        public Criteria andUpdateByIsNotNull() {
            addCriterion("update_by is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateByEqualTo(String value) {
            addCriterion("update_by =", value, "updateBy");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andUpdateByEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("update_by = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateByNotEqualTo(String value) {
            addCriterion("update_by <>", value, "updateBy");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andUpdateByNotEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("update_by <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateByGreaterThan(String value) {
            addCriterion("update_by >", value, "updateBy");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andUpdateByGreaterThanColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("update_by > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateByGreaterThanOrEqualTo(String value) {
            addCriterion("update_by >=", value, "updateBy");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andUpdateByGreaterThanOrEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("update_by >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateByLessThan(String value) {
            addCriterion("update_by <", value, "updateBy");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andUpdateByLessThanColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("update_by < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateByLessThanOrEqualTo(String value) {
            addCriterion("update_by <=", value, "updateBy");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andUpdateByLessThanOrEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("update_by <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateByLike(String value) {
            addCriterion("update_by like", value, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByNotLike(String value) {
            addCriterion("update_by not like", value, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByIn(List<String> values) {
            addCriterion("update_by in", values, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByNotIn(List<String> values) {
            addCriterion("update_by not in", values, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByBetween(String value1, String value2) {
            addCriterion("update_by between", value1, value2, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByNotBetween(String value1, String value2) {
            addCriterion("update_by not between", value1, value2, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("update_time is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("update_time is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(LocalDateTime value) {
            addCriterion("update_time =", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("update_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(LocalDateTime value) {
            addCriterion("update_time <>", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeNotEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("update_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(LocalDateTime value) {
            addCriterion("update_time >", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeGreaterThanColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("update_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("update_time >=", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeGreaterThanOrEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("update_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(LocalDateTime value) {
            addCriterion("update_time <", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeLessThanColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("update_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("update_time <=", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeLessThanOrEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("update_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<LocalDateTime> values) {
            addCriterion("update_time in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<LocalDateTime> values) {
            addCriterion("update_time not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("update_time between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("update_time not between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNull() {
            addCriterion("deleted is null");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNotNull() {
            addCriterion("deleted is not null");
            return (Criteria) this;
        }

        public Criteria andDeletedEqualTo(Boolean value) {
            addCriterion("deleted =", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andDeletedEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("deleted = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedNotEqualTo(Boolean value) {
            addCriterion("deleted <>", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andDeletedNotEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("deleted <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThan(Boolean value) {
            addCriterion("deleted >", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andDeletedGreaterThanColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("deleted > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThanOrEqualTo(Boolean value) {
            addCriterion("deleted >=", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andDeletedGreaterThanOrEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("deleted >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedLessThan(Boolean value) {
            addCriterion("deleted <", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andDeletedLessThanColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("deleted < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedLessThanOrEqualTo(Boolean value) {
            addCriterion("deleted <=", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andDeletedLessThanOrEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("deleted <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedIn(List<Boolean> values) {
            addCriterion("deleted in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotIn(List<Boolean> values) {
            addCriterion("deleted not in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedBetween(Boolean value1, Boolean value2) {
            addCriterion("deleted between", value1, value2, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotBetween(Boolean value1, Boolean value2) {
            addCriterion("deleted not between", value1, value2, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeleteByIsNull() {
            addCriterion("delete_by is null");
            return (Criteria) this;
        }

        public Criteria andDeleteByIsNotNull() {
            addCriterion("delete_by is not null");
            return (Criteria) this;
        }

        public Criteria andDeleteByEqualTo(String value) {
            addCriterion("delete_by =", value, "deleteBy");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andDeleteByEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("delete_by = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeleteByNotEqualTo(String value) {
            addCriterion("delete_by <>", value, "deleteBy");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andDeleteByNotEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("delete_by <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeleteByGreaterThan(String value) {
            addCriterion("delete_by >", value, "deleteBy");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andDeleteByGreaterThanColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("delete_by > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeleteByGreaterThanOrEqualTo(String value) {
            addCriterion("delete_by >=", value, "deleteBy");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andDeleteByGreaterThanOrEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("delete_by >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeleteByLessThan(String value) {
            addCriterion("delete_by <", value, "deleteBy");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andDeleteByLessThanColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("delete_by < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeleteByLessThanOrEqualTo(String value) {
            addCriterion("delete_by <=", value, "deleteBy");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andDeleteByLessThanOrEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("delete_by <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeleteByLike(String value) {
            addCriterion("delete_by like", value, "deleteBy");
            return (Criteria) this;
        }

        public Criteria andDeleteByNotLike(String value) {
            addCriterion("delete_by not like", value, "deleteBy");
            return (Criteria) this;
        }

        public Criteria andDeleteByIn(List<String> values) {
            addCriterion("delete_by in", values, "deleteBy");
            return (Criteria) this;
        }

        public Criteria andDeleteByNotIn(List<String> values) {
            addCriterion("delete_by not in", values, "deleteBy");
            return (Criteria) this;
        }

        public Criteria andDeleteByBetween(String value1, String value2) {
            addCriterion("delete_by between", value1, value2, "deleteBy");
            return (Criteria) this;
        }

        public Criteria andDeleteByNotBetween(String value1, String value2) {
            addCriterion("delete_by not between", value1, value2, "deleteBy");
            return (Criteria) this;
        }

        public Criteria andDeleteTimeIsNull() {
            addCriterion("delete_time is null");
            return (Criteria) this;
        }

        public Criteria andDeleteTimeIsNotNull() {
            addCriterion("delete_time is not null");
            return (Criteria) this;
        }

        public Criteria andDeleteTimeEqualTo(LocalDateTime value) {
            addCriterion("delete_time =", value, "deleteTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andDeleteTimeEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("delete_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeleteTimeNotEqualTo(LocalDateTime value) {
            addCriterion("delete_time <>", value, "deleteTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andDeleteTimeNotEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("delete_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeleteTimeGreaterThan(LocalDateTime value) {
            addCriterion("delete_time >", value, "deleteTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andDeleteTimeGreaterThanColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("delete_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeleteTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("delete_time >=", value, "deleteTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andDeleteTimeGreaterThanOrEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("delete_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeleteTimeLessThan(LocalDateTime value) {
            addCriterion("delete_time <", value, "deleteTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andDeleteTimeLessThanColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("delete_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeleteTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("delete_time <=", value, "deleteTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andDeleteTimeLessThanOrEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("delete_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeleteTimeIn(List<LocalDateTime> values) {
            addCriterion("delete_time in", values, "deleteTime");
            return (Criteria) this;
        }

        public Criteria andDeleteTimeNotIn(List<LocalDateTime> values) {
            addCriterion("delete_time not in", values, "deleteTime");
            return (Criteria) this;
        }

        public Criteria andDeleteTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("delete_time between", value1, value2, "deleteTime");
            return (Criteria) this;
        }

        public Criteria andDeleteTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("delete_time not between", value1, value2, "deleteTime");
            return (Criteria) this;
        }

        public Criteria andVersionIsNull() {
            addCriterion("version is null");
            return (Criteria) this;
        }

        public Criteria andVersionIsNotNull() {
            addCriterion("version is not null");
            return (Criteria) this;
        }

        public Criteria andVersionEqualTo(Integer value) {
            addCriterion("version =", value, "version");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andVersionEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("version = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVersionNotEqualTo(Integer value) {
            addCriterion("version <>", value, "version");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andVersionNotEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("version <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVersionGreaterThan(Integer value) {
            addCriterion("version >", value, "version");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andVersionGreaterThanColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("version > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVersionGreaterThanOrEqualTo(Integer value) {
            addCriterion("version >=", value, "version");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andVersionGreaterThanOrEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("version >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVersionLessThan(Integer value) {
            addCriterion("version <", value, "version");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andVersionLessThanColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("version < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVersionLessThanOrEqualTo(Integer value) {
            addCriterion("version <=", value, "version");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andVersionLessThanOrEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("version <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVersionIn(List<Integer> values) {
            addCriterion("version in", values, "version");
            return (Criteria) this;
        }

        public Criteria andVersionNotIn(List<Integer> values) {
            addCriterion("version not in", values, "version");
            return (Criteria) this;
        }

        public Criteria andVersionBetween(Integer value1, Integer value2) {
            addCriterion("version between", value1, value2, "version");
            return (Criteria) this;
        }

        public Criteria andVersionNotBetween(Integer value1, Integer value2) {
            addCriterion("version not between", value1, value2, "version");
            return (Criteria) this;
        }

        public Criteria andTenantIdIsNull() {
            addCriterion("tenant_id is null");
            return (Criteria) this;
        }

        public Criteria andTenantIdIsNotNull() {
            addCriterion("tenant_id is not null");
            return (Criteria) this;
        }

        public Criteria andTenantIdEqualTo(String value) {
            addCriterion("tenant_id =", value, "tenantId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andTenantIdEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("tenant_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTenantIdNotEqualTo(String value) {
            addCriterion("tenant_id <>", value, "tenantId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andTenantIdNotEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("tenant_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTenantIdGreaterThan(String value) {
            addCriterion("tenant_id >", value, "tenantId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andTenantIdGreaterThanColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("tenant_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTenantIdGreaterThanOrEqualTo(String value) {
            addCriterion("tenant_id >=", value, "tenantId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andTenantIdGreaterThanOrEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("tenant_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTenantIdLessThan(String value) {
            addCriterion("tenant_id <", value, "tenantId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andTenantIdLessThanColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("tenant_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTenantIdLessThanOrEqualTo(String value) {
            addCriterion("tenant_id <=", value, "tenantId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andTenantIdLessThanOrEqualToColumn(HrPersonContract.Column column) {
            addCriterion(new StringBuilder("tenant_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTenantIdLike(String value) {
            addCriterion("tenant_id like", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdNotLike(String value) {
            addCriterion("tenant_id not like", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdIn(List<String> values) {
            addCriterion("tenant_id in", values, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdNotIn(List<String> values) {
            addCriterion("tenant_id not in", values, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdBetween(String value1, String value2) {
            addCriterion("tenant_id between", value1, value2, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdNotBetween(String value1, String value2) {
            addCriterion("tenant_id not between", value1, value2, "tenantId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table hr_person_contract
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        private HrPersonContractExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        protected Criteria(HrPersonContractExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public HrPersonContractExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        public Criteria andLogicalDeleted(boolean deleted) {
            return deleted ? andDeletedEqualTo(HrPersonContract.Deleted.IS_DELETED.value()) : andDeletedNotEqualTo(HrPersonContract.Deleted.IS_DELETED.value());
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table hr_person_contract
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table hr_person_contract
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table hr_person_contract
         *
         * @mbg.generated
         */
        void example(com.ep.db.domain.HrPersonContractExample example);
    }
}